{"Typealiases.html#/s:9Tafelsalz5Bytesa":{"name":"Bytes","abstract":"<p>A convenience type representing a byte array.</p>"},"Structs/Sodium/SecretBox.html#/s:9Tafelsalz6SodiumV9SecretBoxVAEyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:9Tafelsalz6SodiumV9SecretBoxV16sizeOfKeyInBytesSivp":{"name":"sizeOfKeyInBytes","abstract":"<p>The size of the key in bytes.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:9Tafelsalz6SodiumV9SecretBoxV18sizeOfNonceInBytesSivp":{"name":"sizeOfNonceInBytes","abstract":"<p>The size of the nonce in bytes.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:9Tafelsalz6SodiumV9SecretBoxV16sizeOfMacInBytesSivp":{"name":"sizeOfMacInBytes","abstract":"<p>The size of the message authentication code (MAC) in bytes.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:9Tafelsalz6SodiumV9SecretBoxV6keygenySpys5UInt8VGF":{"name":"keygen(_:)","abstract":"<p>Generates a new symmetric key.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:9Tafelsalz6SodiumV9SecretBoxV7encryptSays5UInt8VG_AItAI9plaintext_SPyAHG5nonceAK3keytF":{"name":"encrypt(plaintext:nonce:key:)","abstract":"<p>Encrypt data.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:9Tafelsalz6SodiumV9SecretBoxV7decryptSays5UInt8VGSgAI10ciphertext_SPyAHG3macAL5nonceAL3keytF":{"name":"decrypt(ciphertext:mac:nonce:key:)","abstract":"<p>Decrypt data.</p>","parent_name":"SecretBox"},"Structs/Sodium/RandomBytes.html#/s:9Tafelsalz6SodiumV11RandomBytesVAEyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:9Tafelsalz6SodiumV11RandomBytesV5bytesySv_Si06sizeInD0tF":{"name":"bytes(_:sizeInBytes:)","abstract":"<p>Write random bytes into a memory region.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:9Tafelsalz6SodiumV11RandomBytesV5bytesSays5UInt8VGSi5count_tF":{"name":"bytes(count:)","abstract":"<p>Generate a randomly filled byte array.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:9Tafelsalz6SodiumV11RandomBytesV6numbers6UInt32VyF":{"name":"number()","abstract":"<p>Generate a random number.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:9Tafelsalz6SodiumV11RandomBytesV7uniforms6UInt32VAH10upperBound_tF":{"name":"uniform(upperBound:)","abstract":"<p>Generates a random number with uniform distribution.</p>","parent_name":"RandomBytes"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashVAEyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV20opslimit_interactiveSivp":{"name":"opslimit_interactive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV17opslimit_moderateSivp":{"name":"opslimit_moderate","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV18opslimit_sensitiveSivp":{"name":"opslimit_sensitive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV20memlimit_interactiveSivp":{"name":"memlimit_interactive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV17memlimit_moderateSivp":{"name":"memlimit_moderate","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV18memlimit_sensitiveSivp":{"name":"memlimit_sensitive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV27sizeOfStorableStringInBytesSivp":{"name":"sizeOfStorableStringInBytes","abstract":"<p>Size of a storable string in bytes.</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV14storableStringSSSgSPys4Int8VG8password_s6UInt64V0H11SizeInBytesSi8opslimitSi8memlimittF":{"name":"storableString(password:passwordSizeInBytes:opslimit:memlimit:)","abstract":"<p>Creates a string that can be used for storing user passwords for the","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:9Tafelsalz6SodiumV12PasswordHashV11isVerifyingSbSS14storableString_SPys4Int8VG8passwords6UInt64V0J11SizeInBytestF":{"name":"isVerifying(storableString:password:passwordSizeInBytes:)","abstract":"<p>Check if a password is verifying a storable string.</p>","parent_name":"PasswordHash"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryVAEyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV8allocateSvSi11sizeInBytes_tF":{"name":"allocate(sizeInBytes:)","abstract":"<p>Allocates a guarded memory region of a given size.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV4freeySvF":{"name":"free(_:)","abstract":"<p>Frees a guarded memory region.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV4wipeySv_Si13amountInBytestF":{"name":"wipe(_:amountInBytes:)","abstract":"<p>Wipes a guarded memory region by overwriting it with zeroes.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV4wipeySays5UInt8VGzF":{"name":"wipe(_:)","abstract":"<p>Wipes a byte array by overwriting it with zeroes.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV8areEqualSbSV_SVSi13amountInBytestF":{"name":"areEqual(_:_:amountInBytes:)","abstract":"<p>Compares two guarded memory regions in constant time.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV13make_readonlyySvF":{"name":"make_readonly(_:)","abstract":"<p>Makes a guarded memory region read-only.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV17make_readwritableySvF":{"name":"make_readwritable(_:)","abstract":"<p>Makes a guarded memory region read-writable.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:9Tafelsalz6SodiumV6MemoryV17make_inaccessibleySvF":{"name":"make_inaccessible(_:)","abstract":"<p>Makes a guarded memory region inaccessible.</p>","parent_name":"Memory"},"Structs/Sodium/KeyExchange.html#/s:9Tafelsalz6SodiumV11KeyExchangeVAEyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"KeyExchange"},"Structs/Sodium/KeyExchange.html#/s:9Tafelsalz6SodiumV11KeyExchangeV06secretC11SizeInBytesSivp":{"name":"secretKeySizeInBytes","abstract":"<p>The size of the secret key in bytes.</p>","parent_name":"KeyExchange"},"Structs/Sodium/KeyExchange.html#/s:9Tafelsalz6SodiumV11KeyExchangeV07sessionC11SizeInBytesSivp":{"name":"sessionKeySizeInBytes","abstract":"<p>The size of the session key in bytes.</p>","parent_name":"KeyExchange"},"Structs/Sodium/KeyExchange.html#/s:9Tafelsalz6SodiumV11KeyExchangeV06publicC11SizeInBytesSivp":{"name":"publicKeySizeInBytes","abstract":"<p>The size of the public key in bytes.</p>","parent_name":"KeyExchange"},"Structs/Sodium/KeyExchange.html#/s:9Tafelsalz6SodiumV11KeyExchangeV7keypairySpys5UInt8VG06publicC3Ptr_AI06secretcH0tF":{"name":"keypair(publicKeyPtr:secretKeyPtr:)","abstract":"<p>Generate a keypair that can be used for exchanging keys.</p>","parent_name":"KeyExchange"},"Structs/Sodium/KeyExchange.html#/s:9Tafelsalz6SodiumV11KeyExchangeV19client_session_keyss5Int32VSpys5UInt8VG5rxPtr_AK02txK0SPyAJG0E2PkAN0E2SkAN06serverM0tF":{"name":"client_session_keys(rxPtr:txPtr:clientPk:clientSk:serverPk:)","abstract":"<p>Calculate session keys for the client side.</p>","parent_name":"KeyExchange"},"Structs/Sodium/KeyExchange.html#/s:9Tafelsalz6SodiumV11KeyExchangeV19server_session_keyss5Int32VSpys5UInt8VG5rxPtr_AK02txK0SPyAJG0E2PkAN0E2SkAN06clientM0tF":{"name":"server_session_keys(rxPtr:txPtr:serverPk:serverSk:clientPk:)","abstract":"<p>Calculate session keys for the server side.</p>","parent_name":"KeyExchange"},"Structs/Sodium/KeyDerivation.html#/s:9Tafelsalz6SodiumV13KeyDerivationVAEyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:9Tafelsalz6SodiumV13KeyDerivationV06masterC11SizeInBytesSivp":{"name":"masterKeySizeInBytes","abstract":"<p>The size of the master key in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:9Tafelsalz6SodiumV13KeyDerivationV18contextSizeInBytesSivp":{"name":"contextSizeInBytes","abstract":"<p>The size of a sub key context in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:9Tafelsalz6SodiumV13KeyDerivationV010minimumSubC11SizeInBytesSivp":{"name":"minimumSubKeySizeInBytes","abstract":"<p>The minimum size of a derived key in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:9Tafelsalz6SodiumV13KeyDerivationV010maximumSubC11SizeInBytesSivp":{"name":"maximumSubKeySizeInBytes","abstract":"<p>The maximum size of a derived key in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:9Tafelsalz6SodiumV13KeyDerivationV6keygenySpys5UInt8VGF":{"name":"keygen(_:)","abstract":"<p>Generate a master key.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:9Tafelsalz6SodiumV13KeyDerivationV6deriveySpys5UInt8VG03subC0_Si0gC11SizeInBytess6UInt64V0gC2IdSayAHG7contextSPyAHG06masterC0tF":{"name":"derive(subKey:subKeySizeInBytes:subKeyId:context:masterKey:)","abstract":"<p>Derive a sub key from a given master key.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashVAEyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV21defaultKeySizeInBytesSivp":{"name":"defaultKeySizeInBytes","abstract":"<p>The default key size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV21minimumKeySizeInBytesSivp":{"name":"minimumKeySizeInBytes","abstract":"<p>The maximum key size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV21maximumKeySizeInBytesSivp":{"name":"maximumKeySizeInBytes","abstract":"<p>The minimum key size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV24defaultOutputSizeInBytesSivp":{"name":"defaultOutputSizeInBytes","abstract":"<p>The default output size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV24minimumOutputSizeInBytesSivp":{"name":"minimumOutputSizeInBytes","abstract":"<p>The minimum output size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV24maximumOutputSizeInBytesSivp":{"name":"maximumOutputSizeInBytes","abstract":"<p>The maximum output size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV4hashSays5UInt8VGSi17outputSizeInBytes_SPyAHG5inputs6UInt64V0khiJ0AKSg3keySi0mhiJ0tF":{"name":"hash(outputSizeInBytes:input:inputSizeInBytes:key:keySizeInBytes:)","abstract":"<p>Calculates a generic hash for a given memory region.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:9Tafelsalz6SodiumV11GenericHashV4hashSays5UInt8VGSPyAHG5input_s6UInt64V0G11SizeInBytestF":{"name":"hash(input:inputSizeInBytes:)","abstract":"<p>Calculates a generic hash for a given memory region.</p>","parent_name":"GenericHash"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumVACyc33_A15325CBA4DE7A561417801BA05F20FALlfc":{"name":"init()","abstract":"<p>This initializes <code>libsodium</code>.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV11generichashAC11GenericHashVvp":{"name":"generichash","abstract":"<p>Access to the wrapper for generic hashing.</p>","parent_name":"Sodium"},"Structs/Sodium/GenericHash.html":{"name":"GenericHash","abstract":"<p>A wrapper for generic hashing.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV3kdfAC13KeyDerivationVvp":{"name":"kdf","abstract":"<p>Access to the key derivation wrapper.</p>","parent_name":"Sodium"},"Structs/Sodium/KeyDerivation.html":{"name":"KeyDerivation","abstract":"<p>A wrapper for key derivation.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV2kxAC11KeyExchangeVvp":{"name":"kx","abstract":"<p>Access to the wrapper for key exchange.</p>","parent_name":"Sodium"},"Structs/Sodium/KeyExchange.html":{"name":"KeyExchange","abstract":"<p>A wrapper for key exchange.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV6memoryAC6MemoryVvp":{"name":"memory","abstract":"<p>Access to the secure memory wrapper.</p>","parent_name":"Sodium"},"Structs/Sodium/Memory.html":{"name":"Memory","abstract":"<p>A wrapper for handling secure memory allocations.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV6pwhashAC12PasswordHashVvp":{"name":"pwhash","abstract":"<p>Access to the password hashing wrapper</p>","parent_name":"Sodium"},"Structs/Sodium/PasswordHash.html":{"name":"PasswordHash","abstract":"<p>A wrapper for password hashing.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV6randomAC11RandomBytesVvp":{"name":"random","abstract":"<p>Access to the wrapper for secure random byte generation.</p>","parent_name":"Sodium"},"Structs/Sodium/RandomBytes.html":{"name":"RandomBytes","abstract":"<p>A wrapper for generating random bytes securely.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV9secretboxAC9SecretBoxVvp":{"name":"secretbox","abstract":"<p>Access to the secret box wrapper.</p>","parent_name":"Sodium"},"Structs/Sodium/SecretBox.html":{"name":"SecretBox","abstract":"<p>A wrapper for symmetric encryption.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV3padSays5UInt8VGAG8unpadded_Si9blockSizetF":{"name":"pad(unpadded:blockSize:)","abstract":"<p>Add padding to protect message lengths.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV5unpadSays5UInt8VGSgAG6padded_Si9blockSizetF":{"name":"unpad(padded:blockSize:)","abstract":"<p>Add padding to protect message lengths.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV7hex2binSays5UInt8VGSgSS_SSSg6ignoretF":{"name":"hex2bin(_:ignore:)","abstract":"<p>Converts hex-characters to a byte array.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV7bin2hexSSSays5UInt8VGF":{"name":"bin2hex(_:)","abstract":"<p>Converts a byte array to a hex-encoded string.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV9b64decodeSays5UInt8VGSgSS_SSSg6ignoretF":{"name":"b64decode(_:ignore:)","abstract":"<p>Converts hex-characters to a byte array.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:9Tafelsalz6SodiumV9b64encodeSSSays5UInt8VG5bytes_tF":{"name":"b64encode(bytes:)","abstract":"<p>Converts a byte array to a Base64-encoded string.</p>","parent_name":"Sodium"},"Structs/Random.html#/s:9Tafelsalz6RandomV5bytesSays5UInt8VGs6UInt32V5count_tFZ":{"name":"bytes(count:)","abstract":"<p>Securely generate a random sequence of bytes.</p>","parent_name":"Random"},"Structs/Random.html#/s:9Tafelsalz6RandomV6numbers6UInt32VyFZ":{"name":"number()","abstract":"<p>Securely generate a random number.</p>","parent_name":"Random"},"Structs/Random.html#/s:9Tafelsalz6RandomV6numbers6UInt32VAF14withUpperBound_tFZ":{"name":"number(withUpperBound:)","abstract":"<p>Securely generate a random number with a given upper bound. The result","parent_name":"Random"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordV11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the hashed password string in bytes. As the string is ASCII","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordVACSgSays5UInt8VGcfc":{"name":"init(_:)","abstract":"<p>Constructs a <code>HashedPassword</code> instance from a hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordVACSgSScfc":{"name":"init(_:)","abstract":"<p>Construct a <code>HashedPassword</code> instance from a hashed password string.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordV6stringSSvp":{"name":"string","abstract":"<p>Returns an ASCII encoded representation of the hashed password. This","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordV10isVerifiedSbAA0C0C2by_tF":{"name":"isVerified(by:)","abstract":"<p>Check if the password <code>password</code> authenticates the hashed password.</p>","parent_name":"HashedPassword"},"Structs/Ciphertext.html#/s:9Tafelsalz10CiphertextV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The encrypted message.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:9Tafelsalz10CiphertextV11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the encrypted message in bytes.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:9Tafelsalz10CiphertextVACSays5UInt8VGcfc":{"name":"init(_:)","abstract":"<p>Constructs a <code>Ciphertext</code> instance from bytes.</p>","parent_name":"Ciphertext"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV9blockSizes6UInt32Vvp":{"name":"blockSize","abstract":"<p>The size of a single block in bytes.</p>","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The padded plaintext bytes.</p>","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksVACSgSays5UInt8VG8unpadded_s6UInt32V9blockSizetcfc":{"name":"init(unpadded:blockSize:)","abstract":"<p>Constructs a <code>Blocks</code> instance from unpadded plaintext. This will add","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksVACSgSays5UInt8VG6padded_s6UInt32V9blockSizetcfc":{"name":"init(padded:blockSize:)","abstract":"<p>Constructs a <code>Blocks</code> instance from padded plaintext.</p>","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV14withoutPaddingSays5UInt8VGvp":{"name":"withoutPadding","abstract":"<p>Return the plaintext without the padding.</p>","parent_name":"Blocks"},"Structs/Blocks.html":{"name":"Blocks","abstract":"<p>This structure represents padded plaintext. Blocks are acutally a byte array"},"Structs/Ciphertext.html":{"name":"Ciphertext","abstract":"<p>A ciphertext is an ecrypted message. In contrast to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EncryptedData.html\">EncryptedData</a></code> it only"},"Structs/HashedPassword.html":{"name":"HashedPassword","abstract":"<p>This class represents hashed passwords. They can be used to store passwords"},"Structs/Random.html":{"name":"Random","abstract":"<p>This can be used to securely generate random data.</p>"},"Structs/Sodium.html":{"name":"Sodium","abstract":"<p>A wrapper for <code>libsodium</code> that on one hand offers convenient access to the"},"Protocols/EncryptedData.html#/s:9Tafelsalz13EncryptedDataP5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The encrypted bytes.</p>","parent_name":"EncryptedData"},"Protocols/EncryptedData.html":{"name":"EncryptedData","abstract":"<p>To avoid accidental confusion if data is encrypted or not, this protocol can"},"Extensions/String.html#/s:SS9TafelsalzE9utf8BytesSays5UInt8VGvp":{"name":"utf8Bytes","abstract":"<p>A UTF-8-encoded byte array representation of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9TafelsalzE9unhexlifySays5UInt8VGSgSSSg6ignore_tF":{"name":"unhexlify(ignore:)","abstract":"<p>Turn a hex-encoded string into a byte array.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9TafelsalzE9b64decodeSays5UInt8VGSgSSSg6ignore_tF":{"name":"b64decode(ignore:)","abstract":"<p>Turn a Base64-encoded string into a byte array.</p>","parent_name":"String"},"Extensions/ArraySlice.html#/s:s10ArraySliceV9Tafelsalzs5UInt8VRszlE5bytesSayAEGvp":{"name":"bytes","abstract":"<p>Turn the array slice into a byte array.</p>","parent_name":"ArraySlice"},"Extensions/Array.html#/s:Sa9Tafelsalzs5UInt8VRszlESayACGSi5count_tcfc":{"name":"init(count:)","abstract":"<p>Create a byte array filled with null bytes.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa9Tafelsalzs5UInt8VRszlE7hexlifySSvp":{"name":"hexlify","abstract":"<p>Return byte array as an hex encoded string.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa9Tafelsalzs5UInt8VRszlE9b64encodeSSyF":{"name":"b64encode()","abstract":"<p>Return byte array as a Base64 encoded string.</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/ArraySlice.html":{"name":"ArraySlice"},"Extensions/String.html":{"name":"String"},"Enums/Padding.html#/s:9Tafelsalz7PaddingO4noneA2CmF":{"name":"none","abstract":"<p>This indicates that no padding should be used.</p>","parent_name":"Padding"},"Enums/Padding.html#/s:9Tafelsalz7PaddingO6paddedACs6UInt32V9blockSize_tcACmF":{"name":"padded","abstract":"<p>This indicates that padding should be used. Padding is based on the","parent_name":"Padding"},"Enums/Padding.html":{"name":"Padding","abstract":"<p>The padding mode for encryption and decryption. The same padding mode has to"},"Global Variables.html#/s:9Tafelsalz6sodiumAA6SodiumVvp":{"name":"sodium","abstract":"<p>A singleton instance of the <code>libsodium</code> wrapper.</p>"},"Global Variables.html#/s:9Tafelsalz8sSuccess33_A15325CBA4DE7A561417801BA05F20FALLs5Int32Vvp":{"name":"sSuccess","abstract":"<p>The default return value that indicates success of an operation performed"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV17PrefixSizeInBytess6UInt32VvpZ":{"name":"PrefixSizeInBytes","abstract":"<p>The size of the authentication code and the nonce in bytes. For the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV5nonceAC5NonceCvp":{"name":"nonce","abstract":"<p>The nonce.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV18authenticationCodeAC014AuthenticationG0Cvp":{"name":"authenticationCode","abstract":"<p>The message authentication code.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV10ciphertextAA0E0Vvp":{"name":"ciphertext","abstract":"<p>The encrypted message.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the authenticated ciphertext in bytes. This includes the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The authenticated ciphertext. This includes the nonce,","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextVAeC5NonceC5nonce_AC18AuthenticationCodeC014authenticationI0AA0E0V10ciphertexttcfc":{"name":"init(nonce:authenticationCode:ciphertext:)","abstract":"<p>Initializes an authenticated ciphertext.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextVAESgSays5UInt8VG5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Inizializes an authenticated ciphertext from a byte array.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticationCode.html#/s:9Tafelsalz9SecretBoxC18AuthenticationCodeC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the authentication code in bytes.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:9Tafelsalz9SecretBoxC18AuthenticationCodeCAESgSays5UInt8VGz5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Restore a authentication code from a byte array. Authentication","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:9Tafelsalz9SecretBoxC18AuthenticationCodeC2eeoiSbAE_AEtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two message authentication codes in constant time.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the nonce in bytes.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceCAEycfc":{"name":"init()","abstract":"<p>Creates a new random nonce.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceCAESgSays5UInt8VGz5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a nonce from a byte array. The byte array is copied to a","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceC2eeoiSbAE_AEtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two nonces in constant time.</p>","parent_name":"Nonce"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the secret key in bytes.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyCAEycfc":{"name":"init()","abstract":"<p>Generates a new secret key.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyCAeA0D8MaterialCcfc":{"name":"init(_:)","abstract":"<p>Creates a secret key from other key material.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyCAESgSays5UInt8VGz5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a secret key from a given byte array. The byte array is","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html":{"name":"SecretKey","abstract":"<p>A class for secret keys that can be used by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"SecretBox"},"Classes/SecretBox/Nonce.html":{"name":"Nonce","abstract":"<p>This class represents a nonce (number used once) that is required for","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticationCode.html":{"name":"AuthenticationCode","abstract":"<p>This class represents a message authentication code to verify the","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticatedCiphertext.html":{"name":"AuthenticatedCiphertext","abstract":"<p>This class represents an authenticated ciphertext, which is an encrypted","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC9secretKey33_1957CADDBD9C5E9B5DB6A81697C80C4BLLAC0bE0Cvp":{"name":"secretKey","abstract":"<p>The secret key.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxCA2C0B3KeyC06secretD0_tcfc":{"name":"init(secretKey:)","abstract":"<p>Initializes a secret box with a given secret key.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxCACSgAA7PersonaC7persona_tcfc":{"name":"init(persona:)","abstract":"<p>Initializes a secret box for a given persona. This automatically loads","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxCACycfc":{"name":"init()","abstract":"<p>Initializes a secret box with an ephemeral key. The key cannot be","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC7encryptAC23AuthenticatedCiphertextVSays5UInt8VG9plaintext_AA7PaddingO7paddingAC5NonceC4withtF":{"name":"encrypt(plaintext:padding:with:)","abstract":"<p>Encrypts a message.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC7encryptAC23AuthenticatedCiphertextVAA6BlocksV9plaintext_AC5NonceC4withtF":{"name":"encrypt(plaintext:with:)","abstract":"<p>Encrypt padded plaintext blocks.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC7decryptSays5UInt8VGSgAC23AuthenticatedCiphertextV10ciphertext_AA7PaddingO7paddingtF":{"name":"decrypt(ciphertext:padding:)","abstract":"<p>Decrypts an encrypted message.</p>","parent_name":"SecretBox"},"Classes/Persona/KeyType.html#/s:9Tafelsalz7PersonaC7KeyTypeO06masterC0A2EmF":{"name":"masterKey","abstract":"<p>This identifies keys that cen be used for deriving other keys.</p>","parent_name":"KeyType"},"Classes/Persona/KeyType.html#/s:9Tafelsalz7PersonaC7KeyTypeO06secretC0A2EmF":{"name":"secretKey","abstract":"<p>This identifies secret keys that can be used with the secret box.</p>","parent_name":"KeyType"},"Classes/Persona/KeyType.html#/s:9Tafelsalz7PersonaC7KeyTypeO011genericHashC0A2EmF":{"name":"genericHashKey","abstract":"<p>This identifies keys that can be used for generic hashing.</p>","parent_name":"KeyType"},"Classes/Persona/Error.html#/s:9Tafelsalz7PersonaC5ErrorO17failedToDecodeKeyA2EmF":{"name":"failedToDecodeKey","abstract":"<p>This indicates that the key is not Base64-encoded.</p>","parent_name":"Error"},"Classes/Persona/Error.html#/s:9Tafelsalz7PersonaC5ErrorO10invalidKeyA2EmF":{"name":"invalidKey","abstract":"<p>This indicates that a key has an invalid size.</p>","parent_name":"Error"},"Classes/Persona/Error.html":{"name":"Error","abstract":"<p>These errors indicate that erroneous keys where stored in the Keychain.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC6forgetyACKFZ":{"name":"forget(_:)","abstract":"<p>Forget a persona. This will remove all secrets of this persona from the","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC10uniqueNameSSvp":{"name":"uniqueName","abstract":"<p>The unique name of the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaCACSS10uniqueName_tcfc":{"name":"init(uniqueName:)","abstract":"<p>Create a new persona. If the persona was created before, the secrets","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC6secret33_461D0B0DBE61B69A779F7EAB13B118D3LLxAC7KeyTypeO3for_xyc18defaultInitializerxSgSays5UInt8VGzc09capturingQ0tKAA0M8MaterialCRbzlF":{"name":"secret(for:defaultInitializer:capturingInitializer:)","abstract":"<p>Helper function to store key material in the system&rsquo;s Keychain for this","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC9setSecret33_461D0B0DBE61B69A779F7EAB13B118D3LLyx3key_AC7KeyTypeO3fortKAA0O8MaterialCRbzlF":{"name":"setSecret(key:for:)","abstract":"<p>This updates or creates a Keychain entry containing the key material.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC9masterKeyAA06MasterD0CyKF":{"name":"masterKey()","abstract":"<p>The master key of the persona, which can be used to derive other keys.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC9secretKeyAA9SecretBoxC0eD0CyKF":{"name":"secretKey()","abstract":"<p>The secret key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC14genericHashKeyAA07GenericD0C0E0CyKF":{"name":"genericHashKey()","abstract":"<p>The key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GenericHash.html\">GenericHash</a></code>.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC12setMasterKeyyAA0dE0CKF":{"name":"setMasterKey(_:)","abstract":"<p>Explicitly set the master key for the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC12setSecretKeyyAA0D3BoxC0dE0CKF":{"name":"setSecretKey(_:)","abstract":"<p>Explicitly set the secret key for the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC17setGenericHashKeyyAA0dE0C0F0CKF":{"name":"setGenericHashKey(_:)","abstract":"<p>Explicitly set the generic hash key for the persona.</p>","parent_name":"Persona"},"Classes/Persona/KeyType.html":{"name":"KeyType","abstract":"<p>This is used to identify the type of the key.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC16bundleIdentifier33_461D0B0DBE61B69A779F7EAB13B118D3LLSSvp":{"name":"bundleIdentifier","abstract":"<p>This is the bundle identifier of the application. It is used to identify","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC11itemService33_461D0B0DBE61B69A779F7EAB13B118D3LLSSAC7KeyTypeO4type_tF":{"name":"itemService(type:)","abstract":"<p>This constructs an identifier for the service and type of key.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC12keychainItemXeXeF":{"name":"keychainItem(for:)","abstract":"<p>This identifies the Keychain entry for the given key type.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC13keychainItems33_461D0B0DBE61B69A779F7EAB13B118D3LLXevp":{"name":"keychainItems","abstract":"<p>This is an array that holds all Keychain entries for this persona.</p>","parent_name":"Persona"},"Classes/Password/MemoryLimit.html#/s:9Tafelsalz8PasswordC11MemoryLimitO6mediumA2EmF":{"name":"medium","abstract":"<p>This requires about 64 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:9Tafelsalz8PasswordC11MemoryLimitO4highA2EmF":{"name":"high","abstract":"<p>This requires about 256 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:9Tafelsalz8PasswordC11MemoryLimitO8veryHighA2EmF":{"name":"veryHigh","abstract":"<p>This requires about 1 GiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:9Tafelsalz8PasswordC11MemoryLimitO11sodiumValue33_C249F1123FB8466BCDAD54104F0BE96BLLSivp":{"name":"sodiumValue","abstract":"<p>Helper function to translate the <code>MemoryLimit</code> enum to the values","parent_name":"MemoryLimit"},"Classes/Password/ComplexityLimit.html#/s:9Tafelsalz8PasswordC15ComplexityLimitO6mediumA2EmF":{"name":"medium","abstract":"<p>This is the fastest option and should be avoided if possible.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:9Tafelsalz8PasswordC15ComplexityLimitO4highA2EmF":{"name":"high","abstract":"<p>This takes about 0.7 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:9Tafelsalz8PasswordC15ComplexityLimitO8veryHighA2EmF":{"name":"veryHigh","abstract":"<p>This takes about 3.5 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:9Tafelsalz8PasswordC15ComplexityLimitO11sodiumValue33_C249F1123FB8466BCDAD54104F0BE96BLLSivp":{"name":"sodiumValue","abstract":"<p>Helper function to translate the <code>ComplexityLimit</code> enum to the","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html":{"name":"ComplexityLimit","abstract":"<p>Defines how much CPU load will be required for hashing a password. This","parent_name":"Password"},"Classes/Password/MemoryLimit.html":{"name":"MemoryLimit","abstract":"<p>Defines how much memory will be required for hashing a password. This","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC5bytesAA11KeyMaterialCvp":{"name":"bytes","abstract":"<p>The password bytes in secure memory.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The password size in bytes.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordCACSgSS_SS10FoundationE8EncodingV5usingtcfc":{"name":"init(_:using:)","abstract":"<p>Initializes a password from a given string with a given encoding.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC4hashAA06HashedB0VSgAC15ComplexityLimitO10complexity_AC06MemoryF0O6memorytF":{"name":"hash(complexity:memory:)","abstract":"<p>Hashes a password for securely storing it on disk or in a database for","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC8verifiesSbAA06HashedB0VF":{"name":"verifies(_:)","abstract":"<p>Checks if this password authenticates a hashed password.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two passwords in constant time regardless of their length. This","parent_name":"Password"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the memory region in bytes.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC7pointer33_0157742E29C6B19189E2A83CD53514B4LLSvvp":{"name":"pointer","abstract":"<p>The pointer to the secure memory region.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryCACs6UInt32V11sizeInBytes_tcfc":{"name":"init(sizeInBytes:)","abstract":"<p>Allocates a secure memory region. The region is filled with <code>0xdb</code>.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryCACSays5UInt8VGzcfc":{"name":"init(_:)","abstract":"<p>Copies bytes from a byte array to a secure memory location and wipes the","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryCfd":{"name":"deinit","abstract":"<p>Deletes secure memory. The memory is overwritten with zeroes.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC12makeReadOnly33_0157742E29C6B19189E2A83CD53514B4LLyyF":{"name":"makeReadOnly()","abstract":"<p>Make the memory region read only.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC16makeReadWritable33_0157742E29C6B19189E2A83CD53514B4LLyyF":{"name":"makeReadWritable()","abstract":"<p>Make the memory region writable.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC16makeInaccessible33_0157742E29C6B19189E2A83CD53514B4LLyyF":{"name":"makeInaccessible()","abstract":"<p>Make the memory region inaccessible.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC15withUnsafeBytesxxSPyq_GKc4body_tKr0_lF":{"name":"withUnsafeBytes(body:)","abstract":"<p>Read raw bytes memory region.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC22withUnsafeMutableBytesxxSpyq_GKc4body_tKr0_lF":{"name":"withUnsafeMutableBytes(body:)","abstract":"<p>Make changes to the raw bytes of the memory region.</p>","parent_name":"Memory"},"Classes/MasterKey/DerivedKey.html#/s:9Tafelsalz9MasterKeyC07DerivedC0C18MinimumSizeInBytess6UInt32VvpZ":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/MasterKey/DerivedKey.html#/s:9Tafelsalz9MasterKeyC07DerivedC0C18MaximumSizeInBytess6UInt32VvpZ":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/MasterKey/DerivedKey.html#/s:9Tafelsalz9MasterKeyC07DerivedC0CAESgs6UInt32V11sizeInBytes_tc33_F9B7987C8745D4C34147856DDBB2A0DDLlfc":{"name":"init(sizeInBytes:)","abstract":"<p>Generate an uninitialized key, as the initialization will happen","parent_name":"DerivedKey"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextV11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the context in bytes.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The description of the context in bytes.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextVAESgSays5UInt8VGcfc":{"name":"init(_:)","abstract":"<p>Initialize a context from a given byte array.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextVAESgSScfc":{"name":"init(_:)","abstract":"<p>Initialize a context from a given string.</p>","parent_name":"Context"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the master key in bytes.</p>","parent_name":"MasterKey"},"Classes/MasterKey/Context.html":{"name":"Context","abstract":"<p>A context for which the derived keys should be used.</p>","parent_name":"MasterKey"},"Classes/MasterKey/DerivedKey.html":{"name":"DerivedKey","abstract":"<p>A key that is derived from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MasterKey.html\">MasterKey</a></code>.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyCACycfc":{"name":"init()","abstract":"<p>Initialize a master key.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyCACSgSays5UInt8VGz5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Initialize a master key from a given byte array. he byte array is copied","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC6deriveAC07DerivedC0CSgs6UInt32V11sizeInBytes_s6UInt64V4withAC7ContextV3andtF":{"name":"derive(sizeInBytes:with:and:)","abstract":"<p>Derive a key with a given size for a given id and context.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC6deriveAA9SecretBoxC0eC0Cs6UInt64V4with_AC7ContextV3andtF":{"name":"derive(with:and:)","abstract":"<p>Derive a secret key that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC6deriveAA11GenericHashC0C0CSgs6UInt64V4with_AC7ContextV3ands6UInt32V17outputSizeInBytestF":{"name":"derive(with:and:outputSizeInBytes:)","abstract":"<p>Derive a key that can be used for personalized hashing.</p>","parent_name":"MasterKey"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the key material in bytes.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC6memory33_91999C26CFF5F6F547CAE8F168F68EC5LLAA6MemoryCvp":{"name":"memory","abstract":"<p>The pointer to the secure memory location.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC10cachedHash33_91999C26CFF5F6F547CAE8F168F68EC5LLSays5UInt8VGSgvp":{"name":"cachedHash","abstract":"<p>This is the cached fingerprint.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialCACs6UInt32V11sizeInBytes_Sb10initializetcfc":{"name":"init(sizeInBytes:initialize:)","abstract":"<p>Initializes new key material of a given size.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialCACSgSays5UInt8VGz5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Initializes key material by a given byte array. The byte array is copied","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialCA2Ccfc":{"name":"init(_:)","abstract":"<p>Creates another instance pointing to the same secure memory location.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC15withUnsafeBytesxxSPyq_GKc4body_tKr0_lF":{"name":"withUnsafeBytes(body:)","abstract":"<p>Read raw bytes from the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC22withUnsafeMutableBytesxxSpyq_GKc4body_tKr0_lF":{"name":"withUnsafeMutableBytes(body:)","abstract":"<p>Make changes to the raw bytes of the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC9copyBytesSays5UInt8VGyF":{"name":"copyBytes()","abstract":"<p>Copy the key material from the secure memory into an insecure byte","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC11fingerprintSays5UInt8VGyF":{"name":"fingerprint()","abstract":"<p>Returns a fingerprint of the key material. This can be used to compare","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC7isEqualSbAC2to_tF":{"name":"isEqual(to:)","abstract":"<p>Constant time comparison of the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC18isFingerprintEqualSbAC2to_tF":{"name":"isFingerprintEqual(to:)","abstract":"<p>Constant time comparison of the hash representing the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyExchange/SessionKeyPair.html#/s:9Tafelsalz11KeyExchangeC07SessionB4PairV2rxAC0dB0Cvp":{"name":"rx","abstract":"<p>This session key should be used by the client to receive data from","parent_name":"SessionKeyPair"},"Classes/KeyExchange/SessionKeyPair.html#/s:9Tafelsalz11KeyExchangeC07SessionB4PairV2txAC0dB0Cvp":{"name":"tx","abstract":"<p>This session key should be used by the client to send data to the","parent_name":"SessionKeyPair"},"Classes/KeyExchange/SessionKey.html#/s:9Tafelsalz11KeyExchangeC07SessionB0C11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the session key in bytes.</p>","parent_name":"SessionKey"},"Classes/KeyExchange/SessionKey.html#/s:9Tafelsalz11KeyExchangeC07SessionB0CAeA0B8MaterialCcfc":{"name":"init(_:)","abstract":"<p>Creates a session key from other key material.</p>","parent_name":"SessionKey"},"Classes/KeyExchange/PublicKey.html#/s:9Tafelsalz11KeyExchangeC06PublicB0C11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the public key in bytes.</p>","parent_name":"PublicKey"},"Classes/KeyExchange/PublicKey.html#/s:9Tafelsalz11KeyExchangeC06PublicB0CAeA0B8MaterialCcfc":{"name":"init(_:)","abstract":"<p>Creates a public key from other key material.</p>","parent_name":"PublicKey"},"Classes/KeyExchange/PublicKey.html#/s:9Tafelsalz11KeyExchangeC06PublicB0CAESgSays5UInt8VGz5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a public key from a given byte array. The byte array is","parent_name":"PublicKey"},"Classes/KeyExchange/SecretKey.html#/s:9Tafelsalz11KeyExchangeC06SecretB033_CF4339B4881E929EDC5C46D785A00F4CLLC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the secret key in bytes.</p>","parent_name":"SecretKey"},"Classes/KeyExchange/SecretKey.html#/s:9Tafelsalz11KeyExchangeC06SecretB033_CF4339B4881E929EDC5C46D785A00F4CLLCAfA0B8MaterialCcfc":{"name":"init(_:)","abstract":"<p>Creates a secret key from other key material.</p>","parent_name":"SecretKey"},"Classes/KeyExchange/Side.html#/s:9Tafelsalz11KeyExchangeC4SideO6clientA2EmF":{"name":"client","abstract":"<p>This denotes the client side of the key exchange.</p>","parent_name":"Side"},"Classes/KeyExchange/Side.html#/s:9Tafelsalz11KeyExchangeC4SideO6serverA2EmF":{"name":"server","abstract":"<p>This denotes the server side of the key exchange.</p>","parent_name":"Side"},"Classes/KeyExchange/Side.html":{"name":"Side","abstract":"<p>The side of the key exchange.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange/SecretKey.html":{"name":"SecretKey","abstract":"<p>The secret key of key exchange.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange/PublicKey.html":{"name":"PublicKey","abstract":"<p>The public key used for the key exchange mechanism.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange/SessionKey.html":{"name":"SessionKey","abstract":"<p>The session key, that can be used for encryption after a successful key","parent_name":"KeyExchange"},"Classes/KeyExchange/SessionKeyPair.html":{"name":"SessionKeyPair","abstract":"<p>A session key pair.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC4sideAC4SideOvp":{"name":"side","abstract":"<p>The side of the key exchange.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC06publicB0AC06PublicB0Cvp":{"name":"publicKey","abstract":"<p>The public key.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC06secretB033_CF4339B4881E929EDC5C46D785A00F4CLLAC06SecretB0AELLCvp":{"name":"secretKey","abstract":"<p>The secret key.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeCA2C4SideO4side_tcfc":{"name":"init(side:)","abstract":"<p>Initializes the local part of a key exchange.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC11sessionKeysAC07SessionB4PairVSgAC06PublicB0C3for_tF":{"name":"sessionKeys(for:)","abstract":"<p>Exchanges a session key pair with another party.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC07sessionB0AC07SessionB0CSgAC06PublicB0C3for_tF":{"name":"sessionKey(for:)","abstract":"<p>Exchanges a single key with another party.</p>","parent_name":"KeyExchange"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC18MinimumSizeInBytess6UInt32VvpZ":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC18MaximumSizeInBytess6UInt32VvpZ":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC18DefaultSizeInBytess6UInt32VvpZ":{"name":"DefaultSizeInBytes","abstract":"<p>The default key size in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyCAESgs6UInt32V11sizeInBytes_tcfc":{"name":"init(sizeInBytes:)","abstract":"<p>Initialize a new key with a given size.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyCAEycfc":{"name":"init()","abstract":"<p>Initialize a new key with the default size.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyCAESgSays5UInt8VGz5bytes_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a key from a given byte array. The byte array is copied to","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyCAESgSS3hex_SSSg6ignoretcfc":{"name":"init(hex:ignore:)","abstract":"<p>Restores a key from a given hex string.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyCAeA0D8MaterialCcfc":{"name":"init(_:)","abstract":"<p>Creates a hashing key from other key material.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html":{"name":"Key","abstract":"<p>This class represents a key that can be used for hashing.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC18MinimumSizeInBytess6UInt32VvpZ":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC18MaximumSizeInBytess6UInt32VvpZ":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC18DefaultSizeInBytess6UInt32VvpZ":{"name":"DefaultSizeInBytes","abstract":"<p>The default size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC5bytes33_DB394DEC7CF34672286AC7F24FBFFAC8LLSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The hash.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashCACSgSays5UInt8VG5bytes_s6UInt32V17outputSizeInBytesAC3KeyCSg4withtcfc":{"name":"init(bytes:outputSizeInBytes:with:)","abstract":"<p>Hash an arbitrary value.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashCACSgSays5UInt8VG5bytes_AA7PersonaC3fors6UInt32V17outputSizeInBytestcfc":{"name":"init(bytes:for:outputSizeInBytes:)","abstract":"<p>Hash an arbitrary value for a given persona.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashCACSgSS3hex_tcfc":{"name":"init(hex:)","abstract":"<p>Restore a hash from a hex string.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC7hexlifySSvp":{"name":"hexlify","abstract":"<p>A hex encoded string representing the hash.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two hashes in constant time.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC9hashValueSivp":{"name":"hashValue","abstract":"<p>The hash value according to the <a href=\"https://developer.apple.com/documentation/swift/hashable\"><code>Hashable</code></a>","parent_name":"GenericHash"},"Classes/GenericHash.html":{"name":"GenericHash","abstract":"<p>This class can be used to generate hash arbitrary data. Keyed hashing is"},"Classes/KeyExchange.html":{"name":"KeyExchange","abstract":"<p>A class that can be used for exchanging keys between two parties on an"},"Classes/KeyMaterial.html":{"name":"KeyMaterial","abstract":"<p>This class can be used to securely store key material in memory.</p>"},"Classes/MasterKey.html":{"name":"MasterKey","abstract":"<p>A master key can be used to derive keys for other purposes.</p>"},"Classes/Memory.html":{"name":"Memory","abstract":"<p>This class is used to securely store values in memory.</p>"},"Classes/Password.html":{"name":"Password","abstract":"<p>This class can be used to securely handle passwords. Passwords will be"},"Classes/Persona.html":{"name":"Persona","abstract":"<p>A persona is an entity for which you are in posession of the secrets. The"},"Classes/SecretBox.html":{"name":"SecretBox","abstract":"<p>This class can be used to encrypt/decrypt data based on a shared secret"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}