{"Typealiases.html#/s:9Tafelsalz4PInt":{"name":"PInt","abstract":"<p>If a function can only be called with valid data, there is no need to"},"Structs/Ciphertext.html#/s:vV9Tafelsalz10Ciphertext5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The encrypted message.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:vV9Tafelsalz10Ciphertext11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the encrypted message in bytes.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:FV9Tafelsalz10CiphertextcFV10Foundation4DataS0_":{"name":"init(_:)","abstract":"<p>Constructs a <code>Ciphertext</code> instance from bytes.</p>","parent_name":"Ciphertext"},"Structs/Sodium/SecretBox.html#/s:FVV9Tafelsalz6Sodium9SecretBoxcFT_S1_":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:vVV9Tafelsalz6Sodium9SecretBox16sizeOfKeyInBytesSi":{"name":"sizeOfKeyInBytes","abstract":"<p>The size of the key in bytes.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:vVV9Tafelsalz6Sodium9SecretBox18sizeOfNonceInBytesSi":{"name":"sizeOfNonceInBytes","abstract":"<p>The size of the nonce in bytes.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:vVV9Tafelsalz6Sodium9SecretBox16sizeOfMacInBytesSi":{"name":"sizeOfMacInBytes","abstract":"<p>The size of the message authentication code (MAC) in bytes.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:FVV9Tafelsalz6Sodium9SecretBox6keygenFGSpVs5UInt8_T_":{"name":"keygen(_:)","abstract":"<p>Generates a new symmetric key.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:FVV9Tafelsalz6Sodium9SecretBox7encryptFT9plaintextV10Foundation4Data5nonceGSPVs5UInt8_3keyGSPS4___TS3_S3__":{"name":"encrypt(plaintext:nonce:key:)","abstract":"<p>Encrypt data.</p>","parent_name":"SecretBox"},"Structs/Sodium/SecretBox.html#/s:FVV9Tafelsalz6Sodium9SecretBox7decryptFT10ciphertextV10Foundation4Data3macGSPVs5UInt8_5nonceGSPS4__3keyGSPS4___GSqS3__":{"name":"decrypt(ciphertext:mac:nonce:key:)","abstract":"<p>Decrypt data.</p>","parent_name":"SecretBox"},"Structs/Sodium/RandomBytes.html#/s:FVV9Tafelsalz6Sodium11RandomBytescFT_S1_":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:FVV9Tafelsalz6Sodium11RandomBytes5bytesFTSv11sizeInBytesSi_T_":{"name":"bytes(_:sizeInBytes:)","abstract":"<p>Write random bytes into a memory region.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:FVV9Tafelsalz6Sodium11RandomBytes5bytesFT5countSi_V10Foundation4Data":{"name":"bytes(count:)","abstract":"<p>Generate a randomly filled byte array.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:FVV9Tafelsalz6Sodium11RandomBytes6numberFT_Vs6UInt32":{"name":"number()","abstract":"<p>Generate a random number.</p>","parent_name":"RandomBytes"},"Structs/Sodium/RandomBytes.html#/s:FVV9Tafelsalz6Sodium11RandomBytes7uniformFT10upperBoundVs6UInt32_S2_":{"name":"uniform(upperBound:)","abstract":"<p>Generates a random number with uniform distribution.</p>","parent_name":"RandomBytes"},"Structs/Sodium/PasswordHash.html#/s:FVV9Tafelsalz6Sodium12PasswordHashcFT_S1_":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:vVV9Tafelsalz6Sodium12PasswordHash20opslimit_interactiveSi":{"name":"opslimit_interactive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:vVV9Tafelsalz6Sodium12PasswordHash17opslimit_moderateSi":{"name":"opslimit_moderate","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:vVV9Tafelsalz6Sodium12PasswordHash18opslimit_sensitiveSi":{"name":"opslimit_sensitive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:vVV9Tafelsalz6Sodium12PasswordHash20memlimit_interactiveSi":{"name":"memlimit_interactive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:vVV9Tafelsalz6Sodium12PasswordHash17memlimit_moderateSi":{"name":"memlimit_moderate","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:vVV9Tafelsalz6Sodium12PasswordHash18memlimit_sensitiveSi":{"name":"memlimit_sensitive","abstract":"<p>Undocumented</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:vVV9Tafelsalz6Sodium12PasswordHash27sizeOfStorableStringInBytesSi":{"name":"sizeOfStorableStringInBytes","abstract":"<p>Size of a storable string in bytes.</p>","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:FVV9Tafelsalz6Sodium12PasswordHash14storableStringFT8passwordGSPVs4Int8_19passwordSizeInBytesVs6UInt648opslimitSi8memlimitSi_GSqSS_":{"name":"storableString(password:passwordSizeInBytes:opslimit:memlimit:)","abstract":"<p>Creates a string that can be used for storing user passwords for the","parent_name":"PasswordHash"},"Structs/Sodium/PasswordHash.html#/s:FVV9Tafelsalz6Sodium12PasswordHash11isVerifyingFT14storableStringSS8passwordGSPVs4Int8_19passwordSizeInBytesVs6UInt64_Sb":{"name":"isVerifying(storableString:password:passwordSizeInBytes:)","abstract":"<p>Check if a password is verifying a storable string.</p>","parent_name":"PasswordHash"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6MemorycFT_S1_":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory8allocateFT11sizeInBytesSi_Sv":{"name":"allocate(sizeInBytes:)","abstract":"<p>Allocates a guarded memory region of a given size.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory4freeFSvT_":{"name":"free(_:)","abstract":"<p>Frees a guarded memory region.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory4wipeFTSv13amountInBytesSi_T_":{"name":"wipe(_:amountInBytes:)","abstract":"<p>Wipes a guarded memory region by overwriting it with zeroes.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory4wipeFRV10Foundation4DataT_":{"name":"wipe(_:)","abstract":"<p>Wipes a byte array by overwriting it with zeroes.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory8areEqualFTSVSV13amountInBytesSi_Sb":{"name":"areEqual(_:_:amountInBytes:)","abstract":"<p>Compares two guarded memory regions in constant time.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory13make_readonlyFSvT_":{"name":"make_readonly(_:)","abstract":"<p>Makes a guarded memory region read-only.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory17make_readwritableFSvT_":{"name":"make_readwritable(_:)","abstract":"<p>Makes a guarded memory region read-writable.</p>","parent_name":"Memory"},"Structs/Sodium/Memory.html#/s:FVV9Tafelsalz6Sodium6Memory17make_inaccessibleFSvT_":{"name":"make_inaccessible(_:)","abstract":"<p>Makes a guarded memory region inaccessible.</p>","parent_name":"Memory"},"Structs/Sodium/KeyDerivation.html#/s:vVV9Tafelsalz6Sodium13KeyDerivation20masterKeySizeInBytesSi":{"name":"masterKeySizeInBytes","abstract":"<p>The size of the master key in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:vVV9Tafelsalz6Sodium13KeyDerivation18contextSizeInBytesSi":{"name":"contextSizeInBytes","abstract":"<p>The size of a sub key context in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:vVV9Tafelsalz6Sodium13KeyDerivation24minimumSubKeySizeInBytesSi":{"name":"minimumSubKeySizeInBytes","abstract":"<p>The minimum size of a derived key in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:vVV9Tafelsalz6Sodium13KeyDerivation24maximumSubKeySizeInBytesSi":{"name":"maximumSubKeySizeInBytes","abstract":"<p>The maximum size of a derived key in bytes.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:FVV9Tafelsalz6Sodium13KeyDerivation6keygenFGSpVs5UInt8_T_":{"name":"keygen(_:)","abstract":"<p>Generate a master key.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/KeyDerivation.html#/s:FVV9Tafelsalz6Sodium13KeyDerivation6deriveFT6subKeyGSpVs5UInt8_17subKeySizeInBytesSi8subKeyIdVs6UInt647contextV10Foundation4Data9masterKeyGSPS2___T_":{"name":"derive(subKey:subKeySizeInBytes:subKeyId:context:masterKey:)","abstract":"<p>Derive a sub key from a given master key.</p>","parent_name":"KeyDerivation"},"Structs/Sodium/GenericHash.html#/s:FVV9Tafelsalz6Sodium11GenericHashcFT_S1_":{"name":"init()","abstract":"<p>The initializer is disabled.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:vVV9Tafelsalz6Sodium11GenericHash21defaultKeySizeInBytesSi":{"name":"defaultKeySizeInBytes","abstract":"<p>The default key size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:vVV9Tafelsalz6Sodium11GenericHash21minimumKeySizeInBytesSi":{"name":"minimumKeySizeInBytes","abstract":"<p>The maximum key size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:vVV9Tafelsalz6Sodium11GenericHash21maximumKeySizeInBytesSi":{"name":"maximumKeySizeInBytes","abstract":"<p>The minimum key size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:vVV9Tafelsalz6Sodium11GenericHash24defaultOutputSizeInBytesSi":{"name":"defaultOutputSizeInBytes","abstract":"<p>The default output size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:vVV9Tafelsalz6Sodium11GenericHash24minimumOutputSizeInBytesSi":{"name":"minimumOutputSizeInBytes","abstract":"<p>The minimum output size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:vVV9Tafelsalz6Sodium11GenericHash24maximumOutputSizeInBytesSi":{"name":"maximumOutputSizeInBytes","abstract":"<p>The maximum output size in bytes.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:FVV9Tafelsalz6Sodium11GenericHash4hashFT17outputSizeInBytesSi5inputGSPVs5UInt8_16inputSizeInBytesVs6UInt643keyGSqGSPS2___14keySizeInBytesSi_V10Foundation4Data":{"name":"hash(outputSizeInBytes:input:inputSizeInBytes:key:keySizeInBytes:)","abstract":"<p>Calculates a generic hash for a given memory region.</p>","parent_name":"GenericHash"},"Structs/Sodium/GenericHash.html#/s:FVV9Tafelsalz6Sodium11GenericHash4hashFT5inputGSPVs5UInt8_16inputSizeInBytesVs6UInt64_V10Foundation4Data":{"name":"hash(input:inputSizeInBytes:)","abstract":"<p>Calculates a generic hash for a given memory region.</p>","parent_name":"GenericHash"},"Structs/Sodium.html#/s:FV9Tafelsalz6SodiumcFT_S0_":{"name":"init()","abstract":"<p>This initializes <code>libsodium</code>.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:vV9Tafelsalz6Sodium11generichashVS0_11GenericHash":{"name":"generichash","abstract":"<p>Access to the wrapper for generic hashing.</p>","parent_name":"Sodium"},"Structs/Sodium/GenericHash.html":{"name":"GenericHash","abstract":"<p>A wrapper for generic hashing.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:vV9Tafelsalz6Sodium3kdfVS0_13KeyDerivation":{"name":"kdf","abstract":"<p>Access to the key derivation wrapper.</p>","parent_name":"Sodium"},"Structs/Sodium/KeyDerivation.html":{"name":"KeyDerivation","abstract":"<p>A wrapper for key derivation.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:vV9Tafelsalz6Sodium6memoryVS0_6Memory":{"name":"memory","abstract":"<p>Access to the secure memory wrapper.</p>","parent_name":"Sodium"},"Structs/Sodium/Memory.html":{"name":"Memory","abstract":"<p>A wrapper for handling secure memory allocations.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:vV9Tafelsalz6Sodium6pwhashVS0_12PasswordHash":{"name":"pwhash","abstract":"<p>Access to the password hashing wrapper</p>","parent_name":"Sodium"},"Structs/Sodium/PasswordHash.html":{"name":"PasswordHash","abstract":"<p>A wrapper for password hashing.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:vV9Tafelsalz6Sodium6randomVS0_11RandomBytes":{"name":"random","abstract":"<p>Access to the wrapper for secure random byte generation.</p>","parent_name":"Sodium"},"Structs/Sodium/RandomBytes.html":{"name":"RandomBytes","abstract":"<p>A wrapper for generating random bytes securely.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:vV9Tafelsalz6Sodium9secretboxVS0_9SecretBox":{"name":"secretbox","abstract":"<p>Access to the secret box wrapper.</p>","parent_name":"Sodium"},"Structs/Sodium/SecretBox.html":{"name":"SecretBox","abstract":"<p>A wrapper for symmetric encryption.</p>","parent_name":"Sodium"},"Structs/Sodium.html#/s:FV9Tafelsalz6Sodium7hex2binFTSS6ignoreGSqSS__V10Foundation4Data":{"name":"hex2bin(_:ignore:)","abstract":"<p>Converts the hex-characters until the first non-hex charater in a string","parent_name":"Sodium"},"Structs/Sodium.html#/s:FV9Tafelsalz6Sodium7bin2hexFV10Foundation4DataSS":{"name":"bin2hex(_:)","abstract":"<p>Converts a byte array to a hex-encoded string.</p>","parent_name":"Sodium"},"Structs/Random.html#/s:ZFV9Tafelsalz6Random5bytesFT5countVs6UInt32_V10Foundation4Data":{"name":"bytes(count:)","abstract":"<p>Securely generate a random sequence of bytes.</p>","parent_name":"Random"},"Structs/Random.html#/s:ZFV9Tafelsalz6Random6numberFT_Vs6UInt32":{"name":"number()","abstract":"<p>Securely generate a random number.</p>","parent_name":"Random"},"Structs/Random.html#/s:ZFV9Tafelsalz6Random6numberFT14withUpperBoundVs6UInt32_S1_":{"name":"number(withUpperBound:)","abstract":"<p>Securely generate a random number with a given upper bound. The result","parent_name":"Random"},"Structs/HashedPassword.html#/s:ZvV9Tafelsalz14HashedPassword11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the hashed password string in bytes. As the string is ASCII","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:vV9Tafelsalz14HashedPassword5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:FV9Tafelsalz14HashedPasswordcFV10Foundation4DataGSqS0__":{"name":"init(_:)","abstract":"<p>Constructs a <code>HashedPassword</code> instance from a hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:FV9Tafelsalz14HashedPasswordcFSSGSqS0__":{"name":"init(_:)","abstract":"<p>Construct a <code>HashedPassword</code> instance from a hashed password string.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:vV9Tafelsalz14HashedPassword6stringSS":{"name":"string","abstract":"<p>Returns an ASCII encoded representation of the hashed password. This","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:FV9Tafelsalz14HashedPassword10isVerifiedFT2byCS_8Password_Sb":{"name":"isVerified(by:)","abstract":"<p>Check if the password <code>password</code> authenticates the hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html":{"name":"HashedPassword","abstract":"<p>This class represents hashed passwords. They can be used to store passwords"},"Structs/Random.html":{"name":"Random","abstract":"<p>This can be used to securely generate random data.</p>"},"Structs/Sodium.html":{"name":"Sodium","abstract":"<p>A wrapper for <code>libsodium</code> that on one hand offers convenient access to the"},"Structs/Ciphertext.html":{"name":"Ciphertext","abstract":"<p>A ciphertext is an ecrypted message. In contrast to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EncryptedData.html\">EncryptedData</a></code> it only"},"Protocols/EncryptedData.html#/s:vP9Tafelsalz13EncryptedData5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The encrypted bytes.</p>","parent_name":"EncryptedData"},"Protocols/EncryptedData.html":{"name":"EncryptedData","abstract":"<p>To avoid accidental confusion if data is encrypted or not, this protocol can"},"Extensions/Data.html#/s:FE9TafelsalzV10Foundation4DatacFT3hexSS6ignoreGSqSS__S1_":{"name":"init(hex:ignore:)","abstract":"<p>Initialize a byte array from a given hex string.</p>","parent_name":"Data"},"Extensions/Data.html#/s:vE9TafelsalzV10Foundation4Data3hexSS":{"name":"hex","abstract":"<p>Outputs a hex encoded string for the byte array.</p>","parent_name":"Data"},"Extensions/Data.html":{"name":"Data"},"Global Variables.html#/s:v9Tafelsalz6sodiumVS_6Sodium":{"name":"sodium","abstract":"<p>A singleton instance of the <code>libsodium</code> wrapper.</p>"},"Global Variables.html#/s:v9TafelsalzP33_A15325CBA4DE7A561417801BA05F20FA8sSuccessVs5Int32":{"name":"sSuccess","abstract":"<p>The default return value that indicates success of an operation performed"},"Classes/MasterKey/DerivedKey.html#/s:ZvCC9Tafelsalz9MasterKey10DerivedKey18MinimumSizeInBytesVs6UInt32":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/MasterKey/DerivedKey.html#/s:ZvCC9Tafelsalz9MasterKey10DerivedKey18MaximumSizeInBytesVs6UInt32":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/MasterKey/DerivedKey.html#/s:FCC9Tafelsalz9MasterKey10DerivedKeycFT11sizeInBytesVs6UInt32_GSqS1__":{"name":"init(sizeInBytes:)","abstract":"<p>Generate an uninitialized key, as the initialization will happen","parent_name":"DerivedKey"},"Classes/MasterKey/Context.html#/s:ZvVC9Tafelsalz9MasterKey7Context11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the context in bytes.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:vVC9Tafelsalz9MasterKey7Context5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The description of the context in bytes.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:FVC9Tafelsalz9MasterKey7ContextcFV10Foundation4DataGSqS1__":{"name":"init(_:)","abstract":"<p>Initialize a context from a given byte array.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:FVC9Tafelsalz9MasterKey7ContextcFSSGSqS1__":{"name":"init(_:)","abstract":"<p>Initialize a context from a given string.</p>","parent_name":"Context"},"Classes/MasterKey.html#/s:ZvC9Tafelsalz9MasterKey11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the master key in bytes.</p>","parent_name":"MasterKey"},"Classes/MasterKey/Context.html":{"name":"Context","abstract":"<p>A context for which the derived keys should be used.</p>","parent_name":"MasterKey"},"Classes/MasterKey/DerivedKey.html":{"name":"DerivedKey","abstract":"<p>A key that is derived from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MasterKey.html\">MasterKey</a></code>.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:FC9Tafelsalz9MasterKeycFT_S0_":{"name":"init()","abstract":"<p>Initialize a master key.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:FC9Tafelsalz9MasterKeycFT5bytesRV10Foundation4Data_GSqS0__":{"name":"init(bytes:)","abstract":"<p>Initialize a master key from a given byte array. he byte array is copied","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:FC9Tafelsalz9MasterKey6deriveFT11sizeInBytesVs6UInt324withVs6UInt643andVS0_7Context_GSqCS0_10DerivedKey_":{"name":"derive(sizeInBytes:with:and:)","abstract":"<p>Derive a key with a given size for a given id and context.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:FC9Tafelsalz9MasterKey6deriveFT4withVs6UInt643andVS0_7Context_CCS_9SecretBox9SecretKey":{"name":"derive(with:and:)","abstract":"<p>Derive a secret key that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"MasterKey"},"Classes/Memory.html#/s:vC9Tafelsalz6Memory11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the memory region in bytes.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:vC9Tafelsalz6MemoryP33_0157742E29C6B19189E2A83CD53514B47pointerSv":{"name":"pointer","abstract":"<p>The pointer to the secure memory region.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6MemorycFT11sizeInBytesVs6UInt32_S0_":{"name":"init(sizeInBytes:)","abstract":"<p>Allocates a secure memory region. The region is filled with <code>0xdb</code>.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6MemorycFRV10Foundation4DataS0_":{"name":"init(_:)","abstract":"<p>Copies bytes from a byte array to a secure memory location and wipes the","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6Memoryd":{"name":"deinit","abstract":"<p>Deletes secure memory. The memory is overwritten with zeroes.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6MemoryP33_0157742E29C6B19189E2A83CD53514B412makeReadOnlyFT_T_":{"name":"makeReadOnly()","abstract":"<p>Make the memory region read only.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6MemoryP33_0157742E29C6B19189E2A83CD53514B416makeReadWritableFT_T_":{"name":"makeReadWritable()","abstract":"<p>Make the memory region writable.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6MemoryP33_0157742E29C6B19189E2A83CD53514B416makeInaccessibleFT_T_":{"name":"makeInaccessible()","abstract":"<p>Make the memory region inaccessible.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6Memory15withUnsafeBytesu0_rFzT4bodyFzGSPq__x_x":{"name":"withUnsafeBytes(body:)","abstract":"<p>Read raw bytes memory region.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:FC9Tafelsalz6Memory22withUnsafeMutableBytesu0_rFzT4bodyFzGSpq__x_x":{"name":"withUnsafeMutableBytes(body:)","abstract":"<p>Make changes to the raw bytes of the memory region.</p>","parent_name":"Memory"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:ZvVC9Tafelsalz9SecretBox23AuthenticatedCiphertext17PrefixSizeInBytesVs6UInt32":{"name":"PrefixSizeInBytes","abstract":"<p>The size of the authentication code and the nonce in bytes. For the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext5nonceCS0_5Nonce":{"name":"nonce","abstract":"<p>The nonce.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext18authenticationCodeCS0_18AuthenticationCode":{"name":"authenticationCode","abstract":"<p>The message authentication code.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext10ciphertextVS_10Ciphertext":{"name":"ciphertext","abstract":"<p>The encrypted message.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the authenticated ciphertext in bytes. This includes the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The authenticated ciphertext. This includes the nonce,","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:FVC9Tafelsalz9SecretBox23AuthenticatedCiphertextcFT5nonceCS0_5Nonce18authenticationCodeCS0_18AuthenticationCode10ciphertextVS_10Ciphertext_S1_":{"name":"init(nonce:authenticationCode:ciphertext:)","abstract":"<p>Initializes an authenticated ciphertext.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:FVC9Tafelsalz9SecretBox23AuthenticatedCiphertextcFT5bytesV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Inizializes an authenticated ciphertext from a byte array.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticationCode.html#/s:ZvCC9Tafelsalz9SecretBox18AuthenticationCode11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the authentication code in bytes.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:FCC9Tafelsalz9SecretBox18AuthenticationCodecFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restore a authentication code from a byte array. Authentication","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:ZFCC9Tafelsalz9SecretBox18AuthenticationCodeoi2eeFTS1_S1__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two message authentication codes in constant time.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/Nonce.html#/s:ZvCC9Tafelsalz9SecretBox5Nonce11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the nonce in bytes.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:FCC9Tafelsalz9SecretBox5NoncecFT_S1_":{"name":"init()","abstract":"<p>Creates a new random nonce.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:FCC9Tafelsalz9SecretBox5NoncecFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restores a nonce from a byte array. The byte array is copied to a","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:ZFCC9Tafelsalz9SecretBox5Nonceoi2eeFTS1_S1__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two nonces in constant time.</p>","parent_name":"Nonce"},"Classes/SecretBox/SecretKey.html#/s:ZvCC9Tafelsalz9SecretBox9SecretKey11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the secret key in bytes.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:FCC9Tafelsalz9SecretBox9SecretKeycFT_S1_":{"name":"init()","abstract":"<p>Generates a new secret key.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:FCC9Tafelsalz9SecretBox9SecretKeycFCS_11KeyMaterialS1_":{"name":"init(_:)","abstract":"<p>Creates a secret key from other key material.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:FCC9Tafelsalz9SecretBox9SecretKeycFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restores a secret key from a given byte array. The byte array is","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html":{"name":"SecretKey","abstract":"<p>A class for secret keys that can be used by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"SecretBox"},"Classes/SecretBox/Nonce.html":{"name":"Nonce","abstract":"<p>This class represents a nonce (number used once) that is required for","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticationCode.html":{"name":"AuthenticationCode","abstract":"<p>This class represents a message authentication code to verify the","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticatedCiphertext.html":{"name":"AuthenticatedCiphertext","abstract":"<p>This class represents an authenticated ciphertext, which is an encrypted","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:vC9Tafelsalz9SecretBoxP33_1957CADDBD9C5E9B5DB6A81697C80C4B9secretKeyCS0_9SecretKey":{"name":"secretKey","abstract":"<p>The secret key.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBoxcFT9secretKeyCS0_9SecretKey_S0_":{"name":"init(secretKey:)","abstract":"<p>Initializes a secret box with a given secret key.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBoxcFT7personaCS_7Persona_GSqS0__":{"name":"init(persona:)","abstract":"<p>Initializes a secret box for a given persona. This automatically loads","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBoxcFT_S0_":{"name":"init()","abstract":"<p>Initializes a secret box with an ephemeral key. The key cannot be","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBox7encryptFT4dataV10Foundation4Data4withCS0_5Nonce_VS0_23AuthenticatedCiphertext":{"name":"encrypt(data:with:)","abstract":"<p>Encrypts a message with a given nonce.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBox7decryptFT4dataVS0_23AuthenticatedCiphertext_GSqV10Foundation4Data_":{"name":"decrypt(data:)","abstract":"<p>Decrypts an encrypted message.</p>","parent_name":"SecretBox"},"Classes/KeyMaterial.html#/s:vC9Tafelsalz11KeyMaterial11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the key material in bytes.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:vC9Tafelsalz11KeyMaterialP33_91999C26CFF5F6F547CAE8F168F68EC56memoryCS_6Memory":{"name":"memory","abstract":"<p>The pointer to the secure memory location.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:vC9Tafelsalz11KeyMaterialP33_91999C26CFF5F6F547CAE8F168F68EC510cachedHashGSqV10Foundation4Data_":{"name":"cachedHash","abstract":"<p>This is the cached fingerprint.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterialcFT11sizeInBytesVs6UInt3210initializeSb_S0_":{"name":"init(sizeInBytes:initialize:)","abstract":"<p>Initializes new key material of a given size.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterialcFT5bytesRV10Foundation4Data_GSqS0__":{"name":"init(bytes:)","abstract":"<p>Initializes key material by a given byte array. The byte array is copied","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterialcFS0_S0_":{"name":"init(_:)","abstract":"<p>Creates another instance pointing to the same secure memory location.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial15withUnsafeBytesu0_rFzT4bodyFzGSPq__x_x":{"name":"withUnsafeBytes(body:)","abstract":"<p>Read raw bytes from the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial22withUnsafeMutableBytesu0_rFzT4bodyFzGSpq__x_x":{"name":"withUnsafeMutableBytes(body:)","abstract":"<p>Make changes to the raw bytes of the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial9copyBytesFT_V10Foundation4Data":{"name":"copyBytes()","abstract":"<p>Copy the key material from the secure memory into an insecure byte","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial11fingerprintFT_V10Foundation4Data":{"name":"fingerprint()","abstract":"<p>Returns a fingerprint of the key material. This can be used to compare","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial7isEqualFT2toS0__Sb":{"name":"isEqual(to:)","abstract":"<p>Constant time comparison of the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial18isFingerprintEqualFT2toS0__Sb":{"name":"isFingerprintEqual(to:)","abstract":"<p>Constant time comparison of the hash representing the key material.</p>","parent_name":"KeyMaterial"},"Classes/GenericHash/Key.html#/s:ZvCC9Tafelsalz11GenericHash3Key18MinimumSizeInBytesVs6UInt32":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:ZvCC9Tafelsalz11GenericHash3Key18MaximumSizeInBytesVs6UInt32":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:ZvCC9Tafelsalz11GenericHash3Key18DefaultSizeInBytesVs6UInt32":{"name":"DefaultSizeInBytes","abstract":"<p>The default key size in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:FCC9Tafelsalz11GenericHash3KeycFT11sizeInBytesVs6UInt32_GSqS1__":{"name":"init(sizeInBytes:)","abstract":"<p>Initialize a new key with a given size.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:FCC9Tafelsalz11GenericHash3KeycFT_S1_":{"name":"init()","abstract":"<p>Initialize a new key with the default size.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:FCC9Tafelsalz11GenericHash3KeycFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restores a key from a given byte array. The byte array is copied to","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:FCC9Tafelsalz11GenericHash3KeycFT3hexSS6ignoreGSqSS__GSqS1__":{"name":"init(hex:ignore:)","abstract":"<p>Restores a key from a given hex string.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html":{"name":"Key","abstract":"<p>This class represents a key that can be used for hashing.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZvC9Tafelsalz11GenericHash18MinimumSizeInBytesVs6UInt32":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZvC9Tafelsalz11GenericHash18MaximumSizeInBytesVs6UInt32":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZvC9Tafelsalz11GenericHash18DefaultSizeInBytesVs6UInt32":{"name":"DefaultSizeInBytes","abstract":"<p>The default size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:vC9Tafelsalz11GenericHashP33_DB394DEC7CF34672286AC7F24FBFFAC85bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The hash.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:FC9Tafelsalz11GenericHashcFT5bytesV10Foundation4Data17outputSizeInBytesVs6UInt324withGSqCS0_3Key__GSqS0__":{"name":"init(bytes:outputSizeInBytes:with:)","abstract":"<p>Hash an arbitrary value.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:FC9Tafelsalz11GenericHashcFT5bytesV10Foundation4Data3forCS_7Persona17outputSizeInBytesVs6UInt32_GSqS0__":{"name":"init(bytes:for:outputSizeInBytes:)","abstract":"<p>Hash an arbitrary value for a given persona.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:FC9Tafelsalz11GenericHashcFT3hexSS_GSqS0__":{"name":"init(hex:)","abstract":"<p>Restore a hash from a hex string.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:vC9Tafelsalz11GenericHash11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:vC9Tafelsalz11GenericHash3hexGSqSS_":{"name":"hex","abstract":"<p>A hex encoded string representing the hash.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZFC9Tafelsalz11GenericHashoi2eeFTS0_S0__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two hashes in constant time.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:vC9Tafelsalz11GenericHash9hashValueSi":{"name":"hashValue","abstract":"<p>The hash value according to the <a href=\"https://developer.apple.com/documentation/swift/hashable\"><code>Hashable</code></a>","parent_name":"GenericHash"},"Classes/Persona/KeyType.html#/s:FOC9Tafelsalz7Persona7KeyType9masterKeyFMS1_S1_":{"name":"masterKey","abstract":"<p>This identifies keys that cen be used for deriving other keys.</p>","parent_name":"KeyType"},"Classes/Persona/KeyType.html#/s:FOC9Tafelsalz7Persona7KeyType9secretKeyFMS1_S1_":{"name":"secretKey","abstract":"<p>This identifies secret keys that can be used with the secret box.</p>","parent_name":"KeyType"},"Classes/Persona/KeyType.html#/s:FOC9Tafelsalz7Persona7KeyType14genericHashKeyFMS1_S1_":{"name":"genericHashKey","abstract":"<p>This identifies keys that can be used for generic hashing.</p>","parent_name":"KeyType"},"Classes/Persona/Error.html#/s:FOC9Tafelsalz7Persona5Error17failedToDecodeKeyFMS1_S1_":{"name":"failedToDecodeKey","abstract":"<p>This indicates that the key is not Base64-encoded.</p>","parent_name":"Error"},"Classes/Persona/Error.html#/s:FOC9Tafelsalz7Persona5Error10invalidKeyFMS1_S1_":{"name":"invalidKey","abstract":"<p>This indicates that a key has an invalid size.</p>","parent_name":"Error"},"Classes/Persona/Error.html":{"name":"Error","abstract":"<p>These errors indicate that erroneous keys where stored in the Keychain.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:ZFC9Tafelsalz7Persona6forgetFzS0_T_":{"name":"forget(_:)","abstract":"<p>Forget a persona. This will remove all secrets of this persona from the","parent_name":"Persona"},"Classes/Persona.html#/s:vC9Tafelsalz7Persona10uniqueNameSS":{"name":"uniqueName","abstract":"<p>The unique name of the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7PersonacFT10uniqueNameSS_S0_":{"name":"init(uniqueName:)","abstract":"<p>Create a new persona. If the persona was created before, the secrets","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7PersonaP33_461D0B0DBE61B69A779F7EAB13B118D36secretuRxCS_11KeyMaterialrFzT3forOS0_7KeyType18defaultInitializerFT_x20capturingInitializerFRV10Foundation4DataGSqx__x":{"name":"secret(for:defaultInitializer:capturingInitializer:)","abstract":"<p>Helper function to store key material in the system&rsquo;s Keychain for this","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7Persona9masterKeyFzT_CS_9MasterKey":{"name":"masterKey()","abstract":"<p>The master key of the persona, which can be used to derive other keys.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7Persona9secretKeyFzT_CCS_9SecretBox9SecretKey":{"name":"secretKey()","abstract":"<p>The secret key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7Persona14genericHashKeyFzT_CCS_11GenericHash3Key":{"name":"genericHashKey()","abstract":"<p>The key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GenericHash.html\">GenericHash</a></code>.</p>","parent_name":"Persona"},"Classes/Persona/KeyType.html":{"name":"KeyType","abstract":"<p>This is used to identify the type of the key.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:vC9Tafelsalz7PersonaP33_461D0B0DBE61B69A779F7EAB13B118D316bundleIdentifierSS":{"name":"bundleIdentifier","abstract":"<p>This is the bundle identifier of the application. It is used to identify","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7PersonaP33_461D0B0DBE61B69A779F7EAB13B118D311itemServiceFT4typeOS0_7KeyType_SS":{"name":"itemService(type:)","abstract":"<p>This constructs an identifier for the service and type of key.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7Persona12keychainItemERR":{"name":"keychainItem(for:)","abstract":"<p>This identifies the Keychain entry for the given key type.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:vC9Tafelsalz7PersonaP33_461D0B0DBE61B69A779F7EAB13B118D313keychainItemsERR":{"name":"keychainItems","abstract":"<p>This is an array that holds all Keychain entries for this persona.</p>","parent_name":"Persona"},"Classes/Password/MemoryLimit.html#/s:FOC9Tafelsalz8Password11MemoryLimit6mediumFMS1_S1_":{"name":"medium","abstract":"<p>This requires about 32 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:FOC9Tafelsalz8Password11MemoryLimit4highFMS1_S1_":{"name":"high","abstract":"<p>This requires about 128 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:FOC9Tafelsalz8Password11MemoryLimit8veryHighFMS1_S1_":{"name":"veryHigh","abstract":"<p>This requires about 512 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/ComplexityLimit.html#/s:FOC9Tafelsalz8Password15ComplexityLimit6mediumFMS1_S1_":{"name":"medium","abstract":"<p>This is the fastest option and should be avoided if possible.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:FOC9Tafelsalz8Password15ComplexityLimit4highFMS1_S1_":{"name":"high","abstract":"<p>This takes about 0.7 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:FOC9Tafelsalz8Password15ComplexityLimit8veryHighFMS1_S1_":{"name":"veryHigh","abstract":"<p>This takes about 3.5 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html":{"name":"ComplexityLimit","abstract":"<p>Defines how much CPU load will be required for hashing a password. This","parent_name":"Password"},"Classes/Password/MemoryLimit.html":{"name":"MemoryLimit","abstract":"<p>Defines how much memory will be required for hashing a password. This","parent_name":"Password"},"Classes/Password.html#/s:ZFC9Tafelsalz8PasswordP33_C249F1123FB8466BCDAD54104F0BE96B11sodiumValueFOS0_15ComplexityLimitSi":{"name":"sodiumValue(_:)","abstract":"<p>Helper function to translate the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Password/ComplexityLimit.html\">ComplexityLimit</a></code> enum to the values","parent_name":"Password"},"Classes/Password.html#/s:ZFC9Tafelsalz8PasswordP33_C249F1123FB8466BCDAD54104F0BE96B11sodiumValueFOS0_11MemoryLimitSi":{"name":"sodiumValue(_:)","abstract":"<p>Helper function to translate the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Password/MemoryLimit.html\">MemoryLimit</a></code> enum to the values","parent_name":"Password"},"Classes/Password.html#/s:vC9Tafelsalz8Password5bytesCS_11KeyMaterial":{"name":"bytes","abstract":"<p>The password bytes in secure memory.</p>","parent_name":"Password"},"Classes/Password.html#/s:vC9Tafelsalz8Password11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The password size in bytes.</p>","parent_name":"Password"},"Classes/Password.html#/s:FC9Tafelsalz8PasswordcFTSS5usingVE10FoundationSS8Encoding_GSqS0__":{"name":"init(_:using:)","abstract":"<p>Initializes a password from a given string with a given encoding.</p>","parent_name":"Password"},"Classes/Password.html#/s:FC9Tafelsalz8Password4hashFT10complexityOS0_15ComplexityLimit6memoryOS0_11MemoryLimit_GSqVS_14HashedPassword_":{"name":"hash(complexity:memory:)","abstract":"<p>Hashes a password for securely storing it on disk or in a database for","parent_name":"Password"},"Classes/Password.html#/s:FC9Tafelsalz8Password8verifiesFVS_14HashedPasswordSb":{"name":"verifies(_:)","abstract":"<p>Checks if this password authenticates a hashed password.</p>","parent_name":"Password"},"Classes/Password.html#/s:ZFC9Tafelsalz8Passwordoi2eeFTS0_S0__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two passwords in constant time regardless of their length. This","parent_name":"Password"},"Classes/Password.html":{"name":"Password","abstract":"<p>This class can be used to securely handle passwords. Passwords will be"},"Classes/Persona.html":{"name":"Persona","abstract":"<p>A persona is an entity for which you are in posession of the secrets. The"},"Classes/GenericHash.html":{"name":"GenericHash","abstract":"<p>This class can be used to generate hash arbitrary data. Keyed hashing is"},"Classes/KeyMaterial.html":{"name":"KeyMaterial","abstract":"<p>This class can be used to securely store key material in memory.</p>"},"Classes/SecretBox.html":{"name":"SecretBox","abstract":"<p>This class can be used to encrypt/decrypt data based on a shared secret"},"Classes/Memory.html":{"name":"Memory","abstract":"<p>This class is used to securely store values in memory.</p>"},"Classes/MasterKey.html":{"name":"MasterKey","abstract":"<p>A master key can be used to derive keys for other purposes.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}