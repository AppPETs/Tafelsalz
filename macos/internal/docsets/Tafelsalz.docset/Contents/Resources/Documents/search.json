{"Typealiases.html#/s:9Tafelsalz4PInt":{"name":"PInt","abstract":"<p>If a function can only be called with valid data, there is no need to"},"Structs/Ciphertext.html#/s:vV9Tafelsalz10Ciphertext5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The encrypted message.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:vV9Tafelsalz10Ciphertext11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the encrypted message in bytes.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:FV9Tafelsalz10CiphertextcFV10Foundation4DataS0_":{"name":"init(_:)","abstract":"<p>Constructs a <code>Ciphertext</code> instance from bytes.</p>","parent_name":"Ciphertext"},"Structs/HashedPassword.html#/s:ZvV9Tafelsalz14HashedPassword11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the hashed password string in bytes. As the string is ASCII","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:vV9Tafelsalz14HashedPassword5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:FV9Tafelsalz14HashedPasswordcFV10Foundation4DataGSqS0__":{"name":"init(_:)","abstract":"<p>Constructs a <code>HashedPassword</code> instance from a hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:FV9Tafelsalz14HashedPasswordcFSSGSqS0__":{"name":"init(_:)","abstract":"<p>Construct a <code>HashedPassword</code> instance from a hashed password string.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:vV9Tafelsalz14HashedPassword6stringSS":{"name":"string","abstract":"<p>Returns an ASCII encoded representation of the hashed password. This","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:FV9Tafelsalz14HashedPassword10isVerifiedFT2byCS_8Password_Sb":{"name":"isVerified(by:)","abstract":"<p>Check if the password <code>password</code> authenticates the hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html":{"name":"HashedPassword","abstract":"<p>This class represents hashed passwords. They can be used to store passwords"},"Structs/Ciphertext.html":{"name":"Ciphertext","abstract":"<p>A ciphertext is an ecrypted message. In contrast to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EncryptedData.html\">EncryptedData</a></code> it only"},"Protocols/EncryptedData.html#/s:vP9Tafelsalz13EncryptedData5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The encrypted bytes.</p>","parent_name":"EncryptedData"},"Protocols/EncryptedData.html":{"name":"EncryptedData","abstract":"<p>To avoid accidental confusion if data is encrypted or not, this protocol can"},"Extensions/Data.html#/s:FE9TafelsalzV10Foundation4DatacFT3hexSS6ignoreGSqSS__GSqS1__":{"name":"init(hex:ignore:)","abstract":"<p>Initialize a byte array from a given hex string.</p>","parent_name":"Data"},"Extensions/Data.html#/s:vE9TafelsalzV10Foundation4Data3hexGSqSS_":{"name":"hex","abstract":"<p>Outputs a hex encoded string for the byte array.</p>","parent_name":"Data"},"Extensions/Data.html":{"name":"Data"},"Classes/Tafelsalz.html#/s:ZFC9Tafelsalz9Tafelsalz13isInitializedFT_Sb":{"name":"isInitialized()","abstract":"<p>This function can be used to determine if <code>libsodium</code> could be","parent_name":"Tafelsalz"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:ZvVC9Tafelsalz9SecretBox23AuthenticatedCiphertext17PrefixSizeInBytesVs6UInt32":{"name":"PrefixSizeInBytes","abstract":"<p>The size of the authentication code and the nonce in bytes. For the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext5nonceCS0_5Nonce":{"name":"nonce","abstract":"<p>The nonce.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext18authenticationCodeCS0_18AuthenticationCode":{"name":"authenticationCode","abstract":"<p>The message authentication code.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext10ciphertextVS_10Ciphertext":{"name":"ciphertext","abstract":"<p>The encrypted message.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the authenticated ciphertext in bytes. This includes the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:vVC9Tafelsalz9SecretBox23AuthenticatedCiphertext5bytesV10Foundation4Data":{"name":"bytes","abstract":"<p>The authenticated ciphertext. This includes the nonce,","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:FVC9Tafelsalz9SecretBox23AuthenticatedCiphertextcFT5nonceCS0_5Nonce18authenticationCodeCS0_18AuthenticationCode10ciphertextVS_10Ciphertext_S1_":{"name":"init(nonce:authenticationCode:ciphertext:)","abstract":"<p>Initializes an authenticated ciphertext.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:FVC9Tafelsalz9SecretBox23AuthenticatedCiphertextcFT5bytesV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Inizializes an authenticated ciphertext from a byte array.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticationCode.html#/s:ZvCC9Tafelsalz9SecretBox18AuthenticationCode11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the authentication code in bytes.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:FCC9Tafelsalz9SecretBox18AuthenticationCodecFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restore a authentication code from a byte array. Authentication","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:ZFCC9Tafelsalz9SecretBox18AuthenticationCodeoi2eeFTS1_S1__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two message authentication codes in constant time.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/Nonce.html#/s:ZvCC9Tafelsalz9SecretBox5Nonce11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the nonce in bytes.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:FCC9Tafelsalz9SecretBox5NoncecFT_GSqS1__":{"name":"init()","abstract":"<p>Creates a new random nonce.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:FCC9Tafelsalz9SecretBox5NoncecFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restores a nonce from a byte array. The byte array is copied to a","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:ZFCC9Tafelsalz9SecretBox5Nonceoi2eeFTS1_S1__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two nonces in constant time.</p>","parent_name":"Nonce"},"Classes/SecretBox/SecretKey.html#/s:ZvCC9Tafelsalz9SecretBox9SecretKey11SizeInBytesVs6UInt32":{"name":"SizeInBytes","abstract":"<p>The size of the secret key in bytes.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:FCC9Tafelsalz9SecretBox9SecretKeycFT_GSqS1__":{"name":"init()","abstract":"<p>Generates a new secret key.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:FCC9Tafelsalz9SecretBox9SecretKeycFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restores a secret key from a given byte array. The byte array is","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html":{"name":"SecretKey","abstract":"<p>A class for secret keys that can be used by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"SecretBox"},"Classes/SecretBox/Nonce.html":{"name":"Nonce","abstract":"<p>This class represents a nonce (number used once) that is required for","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticationCode.html":{"name":"AuthenticationCode","abstract":"<p>This class represents a message authentication code to verify the","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticatedCiphertext.html":{"name":"AuthenticatedCiphertext","abstract":"<p>This class represents an authenticated ciphertext, which is an encrypted","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBoxcFT9secretKeyCS0_9SecretKey_GSqS0__":{"name":"init(secretKey:)","abstract":"<p>Initializes a secret box with a given secret key.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBoxcFT7personaCS_7Persona_GSqS0__":{"name":"init(persona:)","abstract":"<p>Initializes a secret box for a given persona. This automatically loads","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBoxcFT_GSqS0__":{"name":"init()","abstract":"<p>Initializes a secret box with an ephemeral key. The key cannot be","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBox7encryptFT4dataV10Foundation4Data4withCS0_5Nonce_GSqVS0_23AuthenticatedCiphertext_":{"name":"encrypt(data:with:)","abstract":"<p>Encrypts a message with a given nonce.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBox7encryptFT4dataV10Foundation4Data_GSqVS0_23AuthenticatedCiphertext_":{"name":"encrypt(data:)","abstract":"<p>Encrypts a message indeterministically.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:FC9Tafelsalz9SecretBox7decryptFT4dataVS0_23AuthenticatedCiphertext_GSqV10Foundation4Data_":{"name":"decrypt(data:)","abstract":"<p>Decrypts an encrypted message.</p>","parent_name":"SecretBox"},"Classes/KeyMaterial.html#/s:vC9Tafelsalz11KeyMaterial11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the key material in bytes.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterialcFT11sizeInBytesVs6UInt3210initializeSb_GSqS0__":{"name":"init(sizeInBytes:initialize:)","abstract":"<p>Initializes new key material of a given size.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterialcFT5bytesRV10Foundation4Data_GSqS0__":{"name":"init(bytes:)","abstract":"<p>Initializes key material by a given byte array. The byte array is copied","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMateriald":{"name":"deinit","abstract":"<p>Deletes key material. The memory is overwritten with zeroes.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial15withUnsafeBytesu0_rFzT4bodyFzGSPq__x_x":{"name":"withUnsafeBytes(body:)","abstract":"<p>Read raw bytes from the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial22withUnsafeMutableBytesu0_rFzT4bodyFzGSpq__x_x":{"name":"withUnsafeMutableBytes(body:)","abstract":"<p>Make changes to the raw bytes of the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial9copyBytesFT_V10Foundation4Data":{"name":"copyBytes()","abstract":"<p>Copy the key material from the secure memory into an insecure byte","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial11fingerprintFT_GSqV10Foundation4Data_":{"name":"fingerprint()","abstract":"<p>Returns a fingerprint of the key material. This can be used to compare","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial7isEqualFT2toS0__Sb":{"name":"isEqual(to:)","abstract":"<p>Constant time comparison of the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:FC9Tafelsalz11KeyMaterial18isFingerprintEqualFT2toS0__Sb":{"name":"isFingerprintEqual(to:)","abstract":"<p>Constant time comparison of the hash representing the key material.</p>","parent_name":"KeyMaterial"},"Classes/GenericHash/Key.html#/s:ZvCC9Tafelsalz11GenericHash3Key18MinimumSizeInBytesVs6UInt32":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:ZvCC9Tafelsalz11GenericHash3Key18MaximumSizeInBytesVs6UInt32":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:ZvCC9Tafelsalz11GenericHash3Key18DefaultSizeInBytesVs6UInt32":{"name":"DefaultSizeInBytes","abstract":"<p>The default key size in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:FCC9Tafelsalz11GenericHash3KeycFT11sizeInBytesVs6UInt32_GSqS1__":{"name":"init(sizeInBytes:)","abstract":"<p>Initialize a new key with a given size.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:FCC9Tafelsalz11GenericHash3KeycFT5bytesRV10Foundation4Data_GSqS1__":{"name":"init(bytes:)","abstract":"<p>Restores a key from a given byte array. The byte array is copied to","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:FCC9Tafelsalz11GenericHash3KeycFT3hexSS6ignoreGSqSS__GSqS1__":{"name":"init(hex:ignore:)","abstract":"<p>Restores a key from a given hex string.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html":{"name":"Key","abstract":"<p>This class represents a key that can be used for hashing.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZvC9Tafelsalz11GenericHash18MinimumSizeInBytesVs6UInt32":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZvC9Tafelsalz11GenericHash18MaximumSizeInBytesVs6UInt32":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZvC9Tafelsalz11GenericHash18DefaultSizeInBytesVs6UInt32":{"name":"DefaultSizeInBytes","abstract":"<p>The default size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:FC9Tafelsalz11GenericHashcFT5bytesV10Foundation4Data17outputSizeInBytesVs6UInt324withGSqCS0_3Key__GSqS0__":{"name":"init(bytes:outputSizeInBytes:with:)","abstract":"<p>Hash an arbitrary value.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:FC9Tafelsalz11GenericHashcFT5bytesV10Foundation4Data3forCS_7Persona17outputSizeInBytesVs6UInt32_GSqS0__":{"name":"init(bytes:for:outputSizeInBytes:)","abstract":"<p>Hash an arbitrary value for a given persona.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:FC9Tafelsalz11GenericHashcFT3hexSS_GSqS0__":{"name":"init(hex:)","abstract":"<p>Restore a hash from a hex string.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:vC9Tafelsalz11GenericHash11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:vC9Tafelsalz11GenericHash3hexGSqSS_":{"name":"hex","abstract":"<p>A hex encoded string representing the hash.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:ZFC9Tafelsalz11GenericHashoi2eeFTS0_S0__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two hashes in constant time.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:vC9Tafelsalz11GenericHash9hashValueSi":{"name":"hashValue","abstract":"<p>The hash value according to the <a href=\"https://developer.apple.com/documentation/swift/hashable\"><code>Hashable</code></a>","parent_name":"GenericHash"},"Classes/Persona.html#/s:ZFC9Tafelsalz7Persona6forgetFzS0_T_":{"name":"forget(_:)","abstract":"<p>Forget a persona. This will remove all secrets of this persona from the","parent_name":"Persona"},"Classes/Persona.html#/s:vC9Tafelsalz7Persona10uniqueNameSS":{"name":"uniqueName","abstract":"<p>The unique name of the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7PersonacFT10uniqueNameSS_S0_":{"name":"init(uniqueName:)","abstract":"<p>Create a new persona. If the persona was created before, the secrets","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7Persona9secretKeyFT_GSqCCS_9SecretBox9SecretKey_":{"name":"secretKey()","abstract":"<p>The secret key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:FC9Tafelsalz7Persona14genericHashKeyFT_GSqCCS_11GenericHash3Key_":{"name":"genericHashKey()","abstract":"<p>The key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GenericHash.html\">GenericHash</a></code>.</p>","parent_name":"Persona"},"Classes/Random.html#/s:FC9Tafelsalz6RandomcFT_GSqS0__":{"name":"init()","abstract":"<p>Initialize a secure random data generator.</p>","parent_name":"Random"},"Classes/Random.html#/s:FC9Tafelsalz6Random5bytesFT5countVs6UInt32_V10Foundation4Data":{"name":"bytes(count:)","abstract":"<p>Securely generate a random sequence of bytes.</p>","parent_name":"Random"},"Classes/Random.html#/s:FC9Tafelsalz6Random6numberFT_Vs6UInt32":{"name":"number()","abstract":"<p>Securely generate a random number.</p>","parent_name":"Random"},"Classes/Random.html#/s:FC9Tafelsalz6Random6numberFT14withUpperBoundVs6UInt32_S1_":{"name":"number(withUpperBound:)","abstract":"<p>Securely generate a random number with a given upper bound. The result","parent_name":"Random"},"Classes/Password/MemoryLimit.html#/s:FOC9Tafelsalz8Password11MemoryLimit6mediumFMS1_S1_":{"name":"medium","abstract":"<p>This requires about 32 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:FOC9Tafelsalz8Password11MemoryLimit4highFMS1_S1_":{"name":"high","abstract":"<p>This requires about 128 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:FOC9Tafelsalz8Password11MemoryLimit8veryHighFMS1_S1_":{"name":"veryHigh","abstract":"<p>This requires about 512 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/ComplexityLimit.html#/s:FOC9Tafelsalz8Password15ComplexityLimit6mediumFMS1_S1_":{"name":"medium","abstract":"<p>This is the fastest option and should be avoided if possible.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:FOC9Tafelsalz8Password15ComplexityLimit4highFMS1_S1_":{"name":"high","abstract":"<p>This takes about 0.7 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:FOC9Tafelsalz8Password15ComplexityLimit8veryHighFMS1_S1_":{"name":"veryHigh","abstract":"<p>This takes about 3.5 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html":{"name":"ComplexityLimit","abstract":"<p>Defines how much CPU load will be required for hashing a password. This","parent_name":"Password"},"Classes/Password/MemoryLimit.html":{"name":"MemoryLimit","abstract":"<p>Defines how much memory will be required for hashing a password. This","parent_name":"Password"},"Classes/Password.html#/s:vC9Tafelsalz8Password5bytesCS_11KeyMaterial":{"name":"bytes","abstract":"<p>The password bytes in secure memory.</p>","parent_name":"Password"},"Classes/Password.html#/s:vC9Tafelsalz8Password11sizeInBytesVs6UInt32":{"name":"sizeInBytes","abstract":"<p>The password size in bytes.</p>","parent_name":"Password"},"Classes/Password.html#/s:FC9Tafelsalz8PasswordcFTSS5usingVE10FoundationSS8Encoding_GSqS0__":{"name":"init(_:using:)","abstract":"<p>Initializes a password from a given string with a given encoding.</p>","parent_name":"Password"},"Classes/Password.html#/s:FC9Tafelsalz8Password4hashFT10complexityOS0_15ComplexityLimit6memoryOS0_11MemoryLimit_GSqVS_14HashedPassword_":{"name":"hash(complexity:memory:)","abstract":"<p>Hashes a password for securely storing it on disk or in a database for","parent_name":"Password"},"Classes/Password.html#/s:FC9Tafelsalz8Password8verifiesFVS_14HashedPasswordSb":{"name":"verifies(_:)","abstract":"<p>Checks if this password authenticates a hashed password.</p>","parent_name":"Password"},"Classes/Password.html#/s:ZFC9Tafelsalz8Passwordoi2eeFTS0_S0__Sb":{"name":"==(_:_:)","abstract":"<p>Compares two passwords in constant time regardless of their length. This","parent_name":"Password"},"Classes/Password.html":{"name":"Password","abstract":"<p>This class can be used to securely handle passwords. Passwords will be"},"Classes/Random.html":{"name":"Random","abstract":"<p>This class can be used to securely generate random data.</p>"},"Classes/Persona.html":{"name":"Persona","abstract":"<p>A persona is an entity for which you are in posession of the secrets. The"},"Classes/GenericHash.html":{"name":"GenericHash","abstract":"<p>This class can be used to generate hash arbitrary data. Keyed hashing is"},"Classes/KeyMaterial.html":{"name":"KeyMaterial","abstract":"<p>This class can be used to securely store key material in memory.</p>"},"Classes/SecretBox.html":{"name":"SecretBox","abstract":"<p>This class can be used to encrypt/decrypt data based on a shared secret"},"Classes/Tafelsalz.html":{"name":"Tafelsalz","abstract":"<p>Internal class that initializes <code>libsodium</code>. This class is a singleton.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}