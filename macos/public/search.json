{"Typealiases.html#/s:9Tafelsalz5Bytesa":{"name":"Bytes","abstract":"<p>A convenience type representing a byte array.</p>"},"Structs/Random.html#/s:9Tafelsalz6RandomV5bytes5countSays5UInt8VGs6UInt32V_tFZ":{"name":"bytes(count:)","abstract":"<p>Securely generate a random sequence of bytes.</p>","parent_name":"Random"},"Structs/Random.html#/s:9Tafelsalz6RandomV6numbers6UInt32VyFZ":{"name":"number()","abstract":"<p>Securely generate a random number.</p>","parent_name":"Random"},"Structs/Random.html#/s:9Tafelsalz6RandomV6number14withUpperBounds6UInt32VAG_tFZ":{"name":"number(withUpperBound:)","abstract":"<p>Securely generate a random number with a given upper bound. The result","parent_name":"Random"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordV11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the hashed password string in bytes. As the string is ASCII","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordVyACSgSays5UInt8VGcfc":{"name":"init(_:)","abstract":"<p>Constructs a <code>HashedPassword</code> instance from a hashed password.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Construct a <code>HashedPassword</code> instance from a hashed password string.</p>","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordV6stringSSvp":{"name":"string","abstract":"<p>Returns an ASCII encoded representation of the hashed password. This","parent_name":"HashedPassword"},"Structs/HashedPassword.html#/s:9Tafelsalz14HashedPasswordV10isVerified2bySbAA0C0C_tF":{"name":"isVerified(by:)","abstract":"<p>Check if the password <code>password</code> authenticates the hashed password.</p>","parent_name":"HashedPassword"},"Structs/Ciphertext.html#/s:9Tafelsalz10CiphertextV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The encrypted message.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:9Tafelsalz10CiphertextV11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the encrypted message in bytes.</p>","parent_name":"Ciphertext"},"Structs/Ciphertext.html#/s:9Tafelsalz10CiphertextVyACSays5UInt8VGcfc":{"name":"init(_:)","abstract":"<p>Constructs a <code>Ciphertext</code> instance from bytes.</p>","parent_name":"Ciphertext"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV9blockSizes6UInt32Vvp":{"name":"blockSize","abstract":"<p>The size of a single block in bytes.</p>","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The padded plaintext bytes.</p>","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV8unpadded9blockSizeACSgSays5UInt8VG_s6UInt32Vtcfc":{"name":"init(unpadded:blockSize:)","abstract":"<p>Constructs a <code>Blocks</code> instance from unpadded plaintext. This will add","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV6padded9blockSizeACSgSays5UInt8VG_s6UInt32Vtcfc":{"name":"init(padded:blockSize:)","abstract":"<p>Constructs a <code>Blocks</code> instance from padded plaintext.</p>","parent_name":"Blocks"},"Structs/Blocks.html#/s:9Tafelsalz6BlocksV14withoutPaddingSays5UInt8VGvp":{"name":"withoutPadding","abstract":"<p>Return the plaintext without the padding.</p>","parent_name":"Blocks"},"Structs/Blocks.html":{"name":"Blocks","abstract":"<p>This structure represents padded plaintext. Blocks are acutally a byte array"},"Structs/Ciphertext.html":{"name":"Ciphertext","abstract":"<p>A ciphertext is an ecrypted message. In contrast to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EncryptedData.html\">EncryptedData</a></code> it only"},"Structs/HashedPassword.html":{"name":"HashedPassword","abstract":"<p>This class represents hashed passwords. They can be used to store passwords"},"Structs/Random.html":{"name":"Random","abstract":"<p>This can be used to securely generate random data.</p>"},"Protocols/EncryptedData.html#/s:9Tafelsalz13EncryptedDataP5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The encrypted bytes.</p>","parent_name":"EncryptedData"},"Protocols/EncryptedData.html":{"name":"EncryptedData","abstract":"<p>To avoid accidental confusion if data is encrypted or not, this protocol can"},"Extensions/String.html#/s:SS9TafelsalzE9utf8BytesSays5UInt8VGvp":{"name":"utf8Bytes","abstract":"<p>A UTF-8-encoded byte array representation of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9TafelsalzE9unhexlify6ignoreSays5UInt8VGSgSSSg_tF":{"name":"unhexlify(ignore:)","abstract":"<p>Turn a hex-encoded string into a byte array.</p>","parent_name":"String"},"Extensions/String.html#/s:SS9TafelsalzE9b64decode6ignoreSays5UInt8VGSgSSSg_tF":{"name":"b64decode(ignore:)","abstract":"<p>Turn a Base64-encoded string into a byte array.</p>","parent_name":"String"},"Extensions/ArraySlice.html#/s:s10ArraySliceV9Tafelsalzs5UInt8VRszlE5bytesSayAEGvp":{"name":"bytes","abstract":"<p>Turn the array slice into a byte array.</p>","parent_name":"ArraySlice"},"Extensions/Array.html#/s:Sa9Tafelsalzs5UInt8VRszlE5countSayACGSi_tcfc":{"name":"init(count:)","abstract":"<p>Create a byte array filled with null bytes.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa9Tafelsalzs5UInt8VRszlE7hexlifySSvp":{"name":"hexlify","abstract":"<p>Return byte array as an hex encoded string.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa9Tafelsalzs5UInt8VRszlE9b64encodeSSyF":{"name":"b64encode()","abstract":"<p>Return byte array as a Base64 encoded string.</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/ArraySlice.html":{"name":"ArraySlice"},"Extensions/String.html":{"name":"String"},"Enums/Padding.html#/s:9Tafelsalz7PaddingO4noneyA2CmF":{"name":"none","abstract":"<p>This indicates that no padding should be used.</p>","parent_name":"Padding"},"Enums/Padding.html#/s:9Tafelsalz7PaddingO6paddedyACs6UInt32V_tcACmF":{"name":"padded(blockSize:)","abstract":"<p>This indicates that padding should be used. Padding is based on the","parent_name":"Padding"},"Enums/Padding.html":{"name":"Padding","abstract":"<p>The padding mode for encryption and decryption. The same padding mode has to"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV17PrefixSizeInBytess6UInt32VvpZ":{"name":"PrefixSizeInBytes","abstract":"<p>The size of the authentication code and the nonce in bytes. For the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV5nonceAC5NonceCvp":{"name":"nonce","abstract":"<p>The nonce.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV18authenticationCodeAC014AuthenticationG0Cvp":{"name":"authenticationCode","abstract":"<p>The message authentication code.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV10ciphertextAA0E0Vvp":{"name":"ciphertext","abstract":"<p>The encrypted message.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the authenticated ciphertext in bytes. This includes the","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The authenticated ciphertext. This includes the nonce,","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV5nonce18authenticationCode10ciphertextAeC5NonceC_AC014AuthenticationH0CAA0E0Vtcfc":{"name":"init(nonce:authenticationCode:ciphertext:)","abstract":"<p>Initializes an authenticated ciphertext.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticatedCiphertext.html#/s:9Tafelsalz9SecretBoxC23AuthenticatedCiphertextV5bytesAESgSays5UInt8VG_tcfc":{"name":"init(bytes:)","abstract":"<p>Inizializes an authenticated ciphertext from a byte array.</p>","parent_name":"AuthenticatedCiphertext"},"Classes/SecretBox/AuthenticationCode.html#/s:9Tafelsalz9SecretBoxC18AuthenticationCodeC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the authentication code in bytes.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:9Tafelsalz9SecretBoxC18AuthenticationCodeC5bytesAESgSays5UInt8VGz_tcfc":{"name":"init(bytes:)","abstract":"<p>Restore a authentication code from a byte array. Authentication","parent_name":"AuthenticationCode"},"Classes/SecretBox/AuthenticationCode.html#/s:9Tafelsalz9SecretBoxC18AuthenticationCodeC2eeoiySbAE_AEtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two message authentication codes in constant time.</p>","parent_name":"AuthenticationCode"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the nonce in bytes.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceCAEycfc":{"name":"init()","abstract":"<p>Creates a new random nonce.</p>","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceC5bytesAESgSays5UInt8VGz_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a nonce from a byte array. The byte array is copied to a","parent_name":"Nonce"},"Classes/SecretBox/Nonce.html#/s:9Tafelsalz9SecretBoxC5NonceC2eeoiySbAE_AEtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two nonces in constant time.</p>","parent_name":"Nonce"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the secret key in bytes.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyCAEycfc":{"name":"init()","abstract":"<p>Generates a new secret key.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyCyAeA0D8MaterialCcfc":{"name":"init(_:)","abstract":"<p>Creates a secret key from other key material.</p>","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html#/s:9Tafelsalz9SecretBoxC0B3KeyC5bytesAESgSays5UInt8VGz_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a secret key from a given byte array. The byte array is","parent_name":"SecretKey"},"Classes/SecretBox/SecretKey.html":{"name":"SecretKey","abstract":"<p>A class for secret keys that can be used by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"SecretBox"},"Classes/SecretBox/Nonce.html":{"name":"Nonce","abstract":"<p>This class represents a nonce (number used once) that is required for","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticationCode.html":{"name":"AuthenticationCode","abstract":"<p>This class represents a message authentication code to verify the","parent_name":"SecretBox"},"Classes/SecretBox/AuthenticatedCiphertext.html":{"name":"AuthenticatedCiphertext","abstract":"<p>This class represents an authenticated ciphertext, which is an encrypted","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC9secretKeyA2C0bE0C_tcfc":{"name":"init(secretKey:)","abstract":"<p>Initializes a secret box with a given secret key.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC7personaACSgAA7PersonaC_tcfc":{"name":"init(persona:)","abstract":"<p>Initializes a secret box for a given persona. This automatically loads","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxCACycfc":{"name":"init()","abstract":"<p>Initializes a secret box with an ephemeral key. The key cannot be","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC7encrypt9plaintext7padding4withAC23AuthenticatedCiphertextVSays5UInt8VG_AA7PaddingOAC5NonceCtF":{"name":"encrypt(plaintext:padding:with:)","abstract":"<p>Encrypts a message.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC7encrypt9plaintext4withAC23AuthenticatedCiphertextVAA6BlocksV_AC5NonceCtF":{"name":"encrypt(plaintext:with:)","abstract":"<p>Encrypt padded plaintext blocks.</p>","parent_name":"SecretBox"},"Classes/SecretBox.html#/s:9Tafelsalz9SecretBoxC7decrypt10ciphertext7paddingSays5UInt8VGSgAC23AuthenticatedCiphertextV_AA7PaddingOtF":{"name":"decrypt(ciphertext:padding:)","abstract":"<p>Decrypts an encrypted message.</p>","parent_name":"SecretBox"},"Classes/Persona/KeyType.html#/s:9Tafelsalz7PersonaC7KeyTypeO06masterC0yA2EmF":{"name":"masterKey","abstract":"<p>This identifies keys that cen be used for deriving other keys.</p>","parent_name":"KeyType"},"Classes/Persona/KeyType.html#/s:9Tafelsalz7PersonaC7KeyTypeO06secretC0yA2EmF":{"name":"secretKey","abstract":"<p>This identifies secret keys that can be used with the secret box.</p>","parent_name":"KeyType"},"Classes/Persona/KeyType.html#/s:9Tafelsalz7PersonaC7KeyTypeO011genericHashC0yA2EmF":{"name":"genericHashKey","abstract":"<p>This identifies keys that can be used for generic hashing.</p>","parent_name":"KeyType"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC6forgetyyACKFZ":{"name":"forget(_:)","abstract":"<p>Forget a persona. This will remove all secrets of this persona from the","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC10uniqueNameSSvp":{"name":"uniqueName","abstract":"<p>The unique name of the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC10uniqueNameACSS_tcfc":{"name":"init(uniqueName:)","abstract":"<p>Create a new persona. If the persona was created before, the secrets","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC9masterKeyAA06MasterD0CyKF":{"name":"masterKey()","abstract":"<p>The master key of the persona, which can be used to derive other keys.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC9secretKeyAA9SecretBoxC0eD0CyKF":{"name":"secretKey()","abstract":"<p>The secret key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC14genericHashKeyAA07GenericD0C0E0CyKF":{"name":"genericHashKey()","abstract":"<p>The key of the persona that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/GenericHash.html\">GenericHash</a></code>.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC12setMasterKeyyyAA0dE0CKF":{"name":"setMasterKey(_:)","abstract":"<p>Explicitly set the master key for the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC12setSecretKeyyyAA0D3BoxC0dE0CKF":{"name":"setSecretKey(_:)","abstract":"<p>Explicitly set the secret key for the persona.</p>","parent_name":"Persona"},"Classes/Persona.html#/s:9Tafelsalz7PersonaC17setGenericHashKeyyyAA0dE0C0F0CKF":{"name":"setGenericHashKey(_:)","abstract":"<p>Explicitly set the generic hash key for the persona.</p>","parent_name":"Persona"},"Classes/Persona/KeyType.html":{"name":"KeyType","abstract":"<p>This is used to identify the type of the key.</p>","parent_name":"Persona"},"Classes/Persona.html#/keychainItem(for:)":{"name":"keychainItem(for:)","abstract":"<p>This identifies the Keychain entry for the given key type.</p>","parent_name":"Persona"},"Classes/Password/DerivedKey.html#/s:9Tafelsalz8PasswordC10DerivedKeyC18MinimumSizeInBytess6UInt32VvpZ":{"name":"MinimumSizeInBytes","abstract":"<p>Minimum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/Password/DerivedKey.html#/s:9Tafelsalz8PasswordC10DerivedKeyC18MaximumSizeInBytess6UInt32VvpZ":{"name":"MaximumSizeInBytes","abstract":"<p>Maximum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/Password/DerivedKey.html#/s:9Tafelsalz8PasswordC10DerivedKeyC29SizeOfPublicParametersInBytess6UInt32VvpZ":{"name":"SizeOfPublicParametersInBytes","abstract":"<p>Size of the public parameters, serialized to a byte array.</p>","parent_name":"DerivedKey"},"Classes/Password/DerivedKey.html#/s:9Tafelsalz8PasswordC10DerivedKeyC16publicParametersSays5UInt8VGvp":{"name":"publicParameters","abstract":"<p>A byte array containing all the parameters required to derive the","parent_name":"DerivedKey"},"Classes/Password/DerivedKey.html#/s:9Tafelsalz8PasswordC10DerivedKeyC23extractPublicParameters5bytesAC4SaltV_AC15ComplexityLimitOAC06MemoryK0OtSgSays5UInt8VG_tFZ":{"name":"extractPublicParameters(bytes:)","abstract":"<p>Extract the public parameters from a byte array. The size of the","parent_name":"DerivedKey"},"Classes/Password/Salt.html#/s:9Tafelsalz8PasswordC4SaltV11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the salt in bytes.</p>","parent_name":"Salt"},"Classes/Password/Salt.html#/s:9Tafelsalz8PasswordC4SaltV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The actual salt bytes.</p>","parent_name":"Salt"},"Classes/Password/Salt.html#/s:9Tafelsalz8PasswordC4SaltVAEycfc":{"name":"init()","abstract":"<p>Initializes a random salt.</p>","parent_name":"Salt"},"Classes/Password/Salt.html#/s:9Tafelsalz8PasswordC4SaltV5bytesAESgSays5UInt8VG_tcfc":{"name":"init(bytes:)","abstract":"<p>Initializes a salt from a byte array.</p>","parent_name":"Salt"},"Classes/Password/MemoryLimit.html#/s:9Tafelsalz8PasswordC11MemoryLimitO6mediumyA2EmF":{"name":"medium","abstract":"<p>This requires about 64 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:9Tafelsalz8PasswordC11MemoryLimitO4highyA2EmF":{"name":"high","abstract":"<p>This requires about 256 MiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/MemoryLimit.html#/s:9Tafelsalz8PasswordC11MemoryLimitO8veryHighyA2EmF":{"name":"veryHigh","abstract":"<p>This requires about 1 GiB memory.</p>","parent_name":"MemoryLimit"},"Classes/Password/ComplexityLimit.html#/s:9Tafelsalz8PasswordC15ComplexityLimitO6mediumyA2EmF":{"name":"medium","abstract":"<p>This is the fastest option and should be avoided if possible.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:9Tafelsalz8PasswordC15ComplexityLimitO4highyA2EmF":{"name":"high","abstract":"<p>This takes about 0.7 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html#/s:9Tafelsalz8PasswordC15ComplexityLimitO8veryHighyA2EmF":{"name":"veryHigh","abstract":"<p>This takes about 3.5 seconds on a 2.8 Ghz Core i7 CPU.</p>","parent_name":"ComplexityLimit"},"Classes/Password/ComplexityLimit.html":{"name":"ComplexityLimit","abstract":"<p>Defines how much CPU load will be required for hashing a password. This","parent_name":"Password"},"Classes/Password/MemoryLimit.html":{"name":"MemoryLimit","abstract":"<p>Defines how much memory will be required for hashing a password. This","parent_name":"Password"},"Classes/Password/Salt.html":{"name":"Salt","abstract":"<p>A salt should be applied to passwords prior to hashing in order to","parent_name":"Password"},"Classes/Password/DerivedKey.html":{"name":"DerivedKey","abstract":"<p>A key that is derived from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Password.html\">Password</a></code>.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC_5usingACSgSS_SS10FoundationE8EncodingVtcfc":{"name":"init(_:using:)","abstract":"<p>Initializes a password from a given string with a given encoding.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC4hash10complexity6memoryAA06HashedB0VSgAC15ComplexityLimitO_AC06MemoryH0OtF":{"name":"hash(complexity:memory:)","abstract":"<p>Hashes a password for securely storing it on disk or in a database for","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC8verifiesySbAA06HashedB0VF":{"name":"verifies(_:)","abstract":"<p>Checks if this password authenticates a hashed password.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC6derive11sizeInBytes10complexity6memory4saltAC10DerivedKeyCSgs6UInt32V_AC15ComplexityLimitOAC06MemoryN0OAC4SaltVtF":{"name":"derive(sizeInBytes:complexity:memory:salt:)","abstract":"<p>Derive a cryptographic key for a given password.</p>","parent_name":"Password"},"Classes/Password.html#/s:9Tafelsalz8PasswordC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two passwords in constant time regardless of their length. This","parent_name":"Password"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the memory region in bytes.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC11sizeInBytesACs6UInt32V_tcfc":{"name":"init(sizeInBytes:)","abstract":"<p>Allocates a secure memory region. The region is filled with <code>0xdb</code>.</p>","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryCyACSays5UInt8VGzcfc":{"name":"init(_:)","abstract":"<p>Copies bytes from a byte array to a secure memory location and wipes the","parent_name":"Memory"},"Classes/Memory.html#/s:9Tafelsalz6MemoryC15withUnsafeBytes4bodyxxSPyq_GKXE_tKr0_lF":{"name":"withUnsafeBytes(body:)","abstract":"<p>Read raw bytes memory region.</p>","parent_name":"Memory"},"Classes/MasterKey/DerivedKey.html#/s:9Tafelsalz9MasterKeyC07DerivedC0C18MinimumSizeInBytess6UInt32VvpZ":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/MasterKey/DerivedKey.html#/s:9Tafelsalz9MasterKeyC07DerivedC0C18MaximumSizeInBytess6UInt32VvpZ":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the derived key in bytes.</p>","parent_name":"DerivedKey"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextV11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the context in bytes.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextV5bytesSays5UInt8VGvp":{"name":"bytes","abstract":"<p>The description of the context in bytes.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextVyAESgSays5UInt8VGcfc":{"name":"init(_:)","abstract":"<p>Initialize a context from a given byte array.</p>","parent_name":"Context"},"Classes/MasterKey/Context.html#/s:9Tafelsalz9MasterKeyC7ContextVyAESgSScfc":{"name":"init(_:)","abstract":"<p>Initialize a context from a given string.</p>","parent_name":"Context"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the master key in bytes.</p>","parent_name":"MasterKey"},"Classes/MasterKey/Context.html":{"name":"Context","abstract":"<p>A context for which the derived keys should be used.</p>","parent_name":"MasterKey"},"Classes/MasterKey/DerivedKey.html":{"name":"DerivedKey","abstract":"<p>A key that is derived from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MasterKey.html\">MasterKey</a></code>.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyCACycfc":{"name":"init()","abstract":"<p>Initialize a master key.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC5bytesACSgSays5UInt8VGz_tcfc":{"name":"init(bytes:)","abstract":"<p>Initialize a master key from a given byte array. he byte array is copied","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC6derive11sizeInBytes4with3andAC07DerivedC0CSgs6UInt32V_s6UInt64VAC7ContextVtF":{"name":"derive(sizeInBytes:with:and:)","abstract":"<p>Derive a key with a given size for a given id and context.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC6derive4with3andAA9SecretBoxC0gC0Cs6UInt64V_AC7ContextVtF":{"name":"derive(with:and:)","abstract":"<p>Derive a secret key that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SecretBox.html\">SecretBox</a></code>.</p>","parent_name":"MasterKey"},"Classes/MasterKey.html#/s:9Tafelsalz9MasterKeyC6derive4with3and17outputSizeInBytesAA11GenericHashC0C0CSgs6UInt64V_AC7ContextVs6UInt32VtF":{"name":"derive(with:and:outputSizeInBytes:)","abstract":"<p>Derive a key that can be used for personalized hashing.</p>","parent_name":"MasterKey"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the key material in bytes.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC11sizeInBytes10initializeACs6UInt32V_Sbtcfc":{"name":"init(sizeInBytes:initialize:)","abstract":"<p>Initializes new key material of a given size.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC5bytesACSgSays5UInt8VGz_tcfc":{"name":"init(bytes:)","abstract":"<p>Initializes key material by a given byte array. The byte array is copied","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialCyA2Ccfc":{"name":"init(_:)","abstract":"<p>Creates another instance pointing to the same secure memory location.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC15withUnsafeBytes4bodyxxSPyq_GKXE_tKr0_lF":{"name":"withUnsafeBytes(body:)","abstract":"<p>Read raw bytes from the key material.</p>","parent_name":"KeyMaterial"},"Classes/KeyMaterial.html#/s:9Tafelsalz11KeyMaterialC9copyBytesSays5UInt8VGyF":{"name":"copyBytes()","abstract":"<p>Copy the key material from the secure memory into an insecure byte","parent_name":"KeyMaterial"},"Classes/KeyExchange/SessionKeyPair.html#/s:9Tafelsalz11KeyExchangeC07SessionB4PairV2rxAC0dB0Cvp":{"name":"rx","abstract":"<p>This session key should be used by the client to receive data from","parent_name":"SessionKeyPair"},"Classes/KeyExchange/SessionKeyPair.html#/s:9Tafelsalz11KeyExchangeC07SessionB4PairV2txAC0dB0Cvp":{"name":"tx","abstract":"<p>This session key should be used by the client to send data to the","parent_name":"SessionKeyPair"},"Classes/KeyExchange/PublicKey.html#/s:9Tafelsalz11KeyExchangeC06PublicB0C11SizeInBytess6UInt32VvpZ":{"name":"SizeInBytes","abstract":"<p>The size of the public key in bytes.</p>","parent_name":"PublicKey"},"Classes/KeyExchange/PublicKey.html#/s:9Tafelsalz11KeyExchangeC06PublicB0C5bytesAESgSays5UInt8VGz_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a public key from a given byte array. The byte array is","parent_name":"PublicKey"},"Classes/KeyExchange/Side.html#/s:9Tafelsalz11KeyExchangeC4SideO6clientyA2EmF":{"name":"client","abstract":"<p>This denotes the client side of the key exchange.</p>","parent_name":"Side"},"Classes/KeyExchange/Side.html#/s:9Tafelsalz11KeyExchangeC4SideO6serveryA2EmF":{"name":"server","abstract":"<p>This denotes the server side of the key exchange.</p>","parent_name":"Side"},"Classes/KeyExchange/Side.html":{"name":"Side","abstract":"<p>The side of the key exchange.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange/PublicKey.html":{"name":"PublicKey","abstract":"<p>The public key used for the key exchange mechanism.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC07SessionB0C":{"name":"SessionKey","abstract":"<p>The session key, that can be used for encryption after a successful key","parent_name":"KeyExchange"},"Classes/KeyExchange/SessionKeyPair.html":{"name":"SessionKeyPair","abstract":"<p>A session key pair.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC4sideAC4SideOvp":{"name":"side","abstract":"<p>The side of the key exchange.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC06publicB0AC06PublicB0Cvp":{"name":"publicKey","abstract":"<p>The public key.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC4sideA2C4SideO_tcfc":{"name":"init(side:)","abstract":"<p>Initializes the local part of a key exchange.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC11sessionKeys3forAC07SessionB4PairVSgAC06PublicB0C_tF":{"name":"sessionKeys(for:)","abstract":"<p>Exchanges a session key pair with another party.</p>","parent_name":"KeyExchange"},"Classes/KeyExchange.html#/s:9Tafelsalz11KeyExchangeC07sessionB03forAC07SessionB0CSgAC06PublicB0C_tF":{"name":"sessionKey(for:)","abstract":"<p>Exchanges a single key with another party.</p>","parent_name":"KeyExchange"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC18MinimumSizeInBytess6UInt32VvpZ":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC18MaximumSizeInBytess6UInt32VvpZ":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the key in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC18DefaultSizeInBytess6UInt32VvpZ":{"name":"DefaultSizeInBytes","abstract":"<p>The default key size in bytes.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC11sizeInBytesAESgs6UInt32V_tcfc":{"name":"init(sizeInBytes:)","abstract":"<p>Initialize a new key with a given size.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyCAEycfc":{"name":"init()","abstract":"<p>Initialize a new key with the default size.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC5bytesAESgSays5UInt8VGz_tcfc":{"name":"init(bytes:)","abstract":"<p>Restores a key from a given byte array. The byte array is copied to","parent_name":"Key"},"Classes/GenericHash/Key.html#/s:9Tafelsalz11GenericHashC3KeyC3hex6ignoreAESgSS_SSSgtcfc":{"name":"init(hex:ignore:)","abstract":"<p>Restores a key from a given hex string.</p>","parent_name":"Key"},"Classes/GenericHash/Key.html":{"name":"Key","abstract":"<p>This class represents a key that can be used for hashing.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC18MinimumSizeInBytess6UInt32VvpZ":{"name":"MinimumSizeInBytes","abstract":"<p>The minimum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC18MaximumSizeInBytess6UInt32VvpZ":{"name":"MaximumSizeInBytes","abstract":"<p>The maximum size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC18DefaultSizeInBytess6UInt32VvpZ":{"name":"DefaultSizeInBytes","abstract":"<p>The default size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC5bytes17outputSizeInBytes4withACSgSays5UInt8VG_s6UInt32VAC3KeyCSgtcfc":{"name":"init(bytes:outputSizeInBytes:with:)","abstract":"<p>Hash an arbitrary value.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC5bytes3for17outputSizeInBytesACSgSays5UInt8VG_AA7PersonaCs6UInt32Vtcfc":{"name":"init(bytes:for:outputSizeInBytes:)","abstract":"<p>Hash an arbitrary value for a given persona.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC3hexACSgSS_tcfc":{"name":"init(hex:)","abstract":"<p>Restore a hash from a hex string.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC11sizeInBytess6UInt32Vvp":{"name":"sizeInBytes","abstract":"<p>The size of the hash in bytes.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC7hexlifySSvp":{"name":"hexlify","abstract":"<p>A hex encoded string representing the hash.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compares two hashes in constant time.</p>","parent_name":"GenericHash"},"Classes/GenericHash.html#/s:9Tafelsalz11GenericHashC9hashValueSivp":{"name":"hashValue","abstract":"<p>The hash value according to the <a href=\"https://developer.apple.com/documentation/swift/hashable\"><code>Hashable</code></a>","parent_name":"GenericHash"},"Classes/GenericHash.html":{"name":"GenericHash","abstract":"<p>This class can be used to generate hash arbitrary data. Keyed hashing is"},"Classes/KeyExchange.html":{"name":"KeyExchange","abstract":"<p>A class that can be used for exchanging keys between two parties on an"},"Classes/KeyMaterial.html":{"name":"KeyMaterial","abstract":"<p>This class can be used to securely store key material in memory.</p>"},"Classes/MasterKey.html":{"name":"MasterKey","abstract":"<p>A master key can be used to derive keys for other purposes.</p>"},"Classes/Memory.html":{"name":"Memory","abstract":"<p>This class is used to securely store values in memory.</p>"},"Classes/Password.html":{"name":"Password","abstract":"<p>This class can be used to securely handle passwords. Passwords will be"},"Classes/Persona.html":{"name":"Persona","abstract":"<p>A persona is an entity for which you are in posession of the secrets. The"},"Classes/SecretBox.html":{"name":"SecretBox","abstract":"<p>This class can be used to encrypt/decrypt data based on a shared secret"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}